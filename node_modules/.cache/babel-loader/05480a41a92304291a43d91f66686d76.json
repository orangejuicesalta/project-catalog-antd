{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useProvideKeysState, TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nimport { computed, defineComponent, onUnmounted, reactive, ref, shallowRef, watch, watchEffect, nextTick, toRaw } from 'vue';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { treeProps } from './props';\nimport { warning } from '../vc-util/warning';\nimport KeyCode from '../_util/KeyCode';\nimport classNames from '../_util/classNames';\nimport pickAttrs from '../_util/pickAttrs';\nimport useMaxLevel from './useMaxLevel';\nvar MAX_RETRY_TIMES = 10;\nexport default defineComponent({\n  name: 'Tree',\n  inheritAttrs: false,\n  slots: ['checkable', 'title', 'icon', 'titleRender'],\n  props: initDefaultProps(treeProps(), {\n    prefixCls: 'vc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: [],\n    dropIndicatorRender: DropIndicator,\n    allowDrop: function allowDrop() {\n      return true;\n    }\n  }),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        slots = _ref.slots,\n        expose = _ref.expose;\n    var destroyed = ref(false);\n    var delayedDragEnterLogic = {};\n    var indent = ref();\n    var selectedKeys = shallowRef([]);\n    var checkedKeys = shallowRef([]);\n    var halfCheckedKeys = shallowRef([]);\n    var loadedKeys = shallowRef([]);\n    var loadingKeys = shallowRef([]);\n    var expandedKeys = shallowRef([]);\n    var loadingRetryTimes = {};\n    var dragState = reactive({\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null\n    });\n    var treeData = shallowRef([]);\n    watch([function () {\n      return props.treeData;\n    }, function () {\n      return props.children;\n    }], function () {\n      treeData.value = props.treeData !== undefined ? toRaw(props.treeData).slice() : convertTreeToData(toRaw(props.children));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var keyEntities = shallowRef({});\n    var focused = ref(false);\n    var activeKey = ref(null);\n    var listChanging = ref(false);\n    var fieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames);\n    });\n    var listRef = ref();\n    var dragStartMousePosition = null;\n    var dragNode = null;\n    var currentMouseOverDroppableNodeKey = null;\n    var treeNodeRequiredProps = computed(function () {\n      return {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey: dragState.dragOverNodeKey,\n        dropPosition: dragState.dropPosition,\n        keyEntities: keyEntities.value\n      };\n    });\n    var expandedKeysSet = computed(function () {\n      return new Set(expandedKeys.value);\n    });\n    var selectedKeysSet = computed(function () {\n      return new Set(selectedKeys.value);\n    });\n    var loadedKeysSet = computed(function () {\n      return new Set(loadedKeys.value);\n    });\n    var loadingKeysSet = computed(function () {\n      return new Set(loadingKeys.value);\n    });\n    var checkedKeysSet = computed(function () {\n      return new Set(checkedKeys.value);\n    });\n    var halfCheckedKeysSet = computed(function () {\n      return new Set(halfCheckedKeys.value);\n    });\n    watchEffect(function () {\n      if (treeData.value) {\n        var entitiesMap = convertDataToEntities(treeData.value, {\n          fieldNames: fieldNames.value\n        });\n        keyEntities.value = _extends(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities);\n      }\n    });\n    var init = false; // 处理 defaultXxxx api, 仅仅首次有效\n\n    watch([function () {\n      return props.expandedKeys;\n    }, function () {\n      return props.autoExpandParent;\n    }, keyEntities], // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n          _newKeys = _ref4[0],\n          newAutoExpandParent = _ref4[1];\n\n      var _ref5 = _slicedToArray(_ref3, 2),\n          _oldKeys = _ref5[0],\n          oldAutoExpandParent = _ref5[1];\n\n      var keys = expandedKeys.value; // ================ expandedKeys =================\n\n      if (props.expandedKeys !== undefined || init && newAutoExpandParent !== oldAutoExpandParent) {\n        keys = props.autoExpandParent || !init && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities.value) : props.expandedKeys;\n      } else if (!init && props.defaultExpandAll) {\n        var cloneKeyEntities = _extends({}, keyEntities.value);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        keys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!init && props.defaultExpandedKeys) {\n        keys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities.value) : props.defaultExpandedKeys;\n      }\n\n      if (keys) {\n        expandedKeys.value = keys;\n      }\n\n      init = true;\n    }, {\n      immediate: true\n    }); // ================ flattenNodes =================\n\n    var flattenNodes = shallowRef([]);\n    watchEffect(function () {\n      flattenNodes.value = flattenTreeData(treeData.value, expandedKeys.value, fieldNames.value);\n    }); // ================ selectedKeys =================\n\n    watchEffect(function () {\n      if (props.selectable) {\n        if (props.selectedKeys !== undefined) {\n          selectedKeys.value = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!init && props.defaultSelectedKeys) {\n          selectedKeys.value = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n    });\n\n    var _useMaxLevel = useMaxLevel(keyEntities),\n        maxLevel = _useMaxLevel.maxLevel,\n        levelEntities = _useMaxLevel.levelEntities; // ================= checkedKeys =================\n\n\n    watchEffect(function () {\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (props.checkedKeys !== undefined) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!init && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData.value) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: checkedKeys.value,\n            halfCheckedKeys: halfCheckedKeys.value\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              newCheckedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              newHalfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(newCheckedKeys, true, keyEntities.value, maxLevel.value, levelEntities.value);\n            newCheckedKeys = conductKeys.checkedKeys;\n            newHalfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n    }); // ================= loadedKeys ==================\n\n    watchEffect(function () {\n      if (props.loadedKeys) {\n        loadedKeys.value = props.loadedKeys;\n      }\n    });\n\n    var resetDragState = function resetDragState() {\n      _extends(dragState, {\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    };\n\n    var scrollTo = function scrollTo(scroll) {\n      listRef.value.scrollTo(scroll);\n    };\n\n    watch(function () {\n      return props.activeKey;\n    }, function () {\n      if (props.activeKey !== undefined) {\n        activeKey.value = props.activeKey;\n      }\n    }, {\n      immediate: true\n    });\n    watch(activeKey, function (val) {\n      nextTick(function () {\n        if (val !== null) {\n          scrollTo({\n            key: val\n          });\n        }\n      });\n    }, {\n      immediate: true,\n      flush: 'post'\n    }); // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n    var setExpandedKeys = function setExpandedKeys(keys) {\n      if (props.expandedKeys === undefined) {\n        expandedKeys.value = keys;\n      }\n    };\n\n    var cleanDragState = function cleanDragState() {\n      if (dragState.draggingNodeKey !== null) {\n        _extends(dragState, {\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      dragStartMousePosition = null;\n      currentMouseOverDroppableNodeKey = null;\n    }; // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n\n\n    var onNodeDragEnd = function onNodeDragEnd(event, node) {\n      var onDragend = props.onDragend;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      onDragend === null || onDragend === void 0 ? void 0 : onDragend({\n        event: event,\n        node: node.eventData\n      });\n      dragNode = null;\n    }; // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n\n\n    var onWindowDragEnd = function onWindowDragEnd(event) {\n      onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', onWindowDragEnd);\n    };\n\n    var onNodeDragStart = function onNodeDragStart(event, node) {\n      var onDragstart = props.onDragstart;\n      var eventKey = node.eventKey,\n          eventData = node.eventData;\n      dragNode = node;\n      dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys.value, eventKey);\n      dragState.draggingNodeKey = eventKey;\n      dragState.dragChildrenKeys = getDragChildrenKeys(eventKey, keyEntities.value);\n      indent.value = listRef.value.getIndentWidth();\n      setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', onWindowDragEnd);\n\n      if (onDragstart) {\n        onDragstart({\n          event: event,\n          node: eventData\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    var onNodeDragEnter = function onNodeDragEnter(event, node) {\n      var onDragenter = props.onDragenter,\n          onExpand = props.onExpand,\n          allowDrop = props.allowDrop,\n          direction = props.direction;\n      var pos = node.pos,\n          eventKey = node.eventKey; // record the key of node which is latest entered, used in dragleave event.\n\n      if (currentMouseOverDroppableNodeKey !== eventKey) {\n        currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        resetDragState();\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        resetDragState();\n        return;\n      } // Side effect for delay drag\n\n\n      if (!delayedDragEnterLogic) {\n        delayedDragEnterLogic = {};\n      }\n\n      Object.keys(delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.eventKey !== node.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (dragState.draggingNodeKey === null) return;\n          var newExpandedKeys = expandedKeys.value.slice();\n          var entity = keyEntities.value[node.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys.value, node.eventKey);\n          }\n\n          setExpandedKeys(newExpandedKeys);\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: node.eventData,\n              expanded: true,\n              nativeEvent: event\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        resetDragState();\n        return;\n      } // Update drag over node and drag state\n\n\n      _extends(dragState, {\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragenter) {\n        onDragenter({\n          event: event,\n          node: node.eventData,\n          expandedKeys: expandedKeys.value\n        });\n      }\n    };\n\n    var onNodeDragOver = function onNodeDragOver(event, node) {\n      var onDragover = props.onDragover,\n          allowDrop = props.allowDrop,\n          direction = props.direction;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(dragState.dropPosition === null && dragState.dropLevelOffset === null && dragState.dropTargetKey === null && dragState.dropContainerKey === null && dragState.dropTargetPos === null && dragState.dropAllowed === false && dragState.dragOverNodeKey === null)) {\n          resetDragState();\n        }\n      } else if (!(dropPosition === dragState.dropPosition && dropLevelOffset === dragState.dropLevelOffset && dropTargetKey === dragState.dropTargetKey && dropContainerKey === dragState.dropContainerKey && dropTargetPos === dragState.dropTargetPos && dropAllowed === dragState.dropAllowed && dragOverNodeKey === dragState.dragOverNodeKey)) {\n        _extends(dragState, {\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragover) {\n        onDragover({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n\n    var onNodeDragLeave = function onNodeDragLeave(event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (currentMouseOverDroppableNodeKey === node.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        resetDragState();\n        currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragleave = props.onDragleave;\n\n      if (onDragleave) {\n        onDragleave({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n\n    var onNodeDrop = function onNodeDrop(event, _node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var _a;\n\n      var dragChildrenKeys = dragState.dragChildrenKeys,\n          dropPosition = dragState.dropPosition,\n          dropTargetKey = dragState.dropTargetKey,\n          dropTargetPos = dragState.dropTargetPos,\n          dropAllowed = dragState.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = props.onDrop;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _extends(_extends({}, getTreeNodeProps(dropTargetKey, toRaw(treeNodeRequiredProps.value))), {\n        active: ((_a = activeItem.value) === null || _a === void 0 ? void 0 : _a.key) === dropTargetKey,\n        data: keyEntities.value[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. Maybe this is a bug of ant-design-vue. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: dragNode ? dragNode.eventData : null,\n        dragNodesKeys: [dragNode.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n\n      dragNode = null;\n    };\n\n    var onNodeClick = function onNodeClick(e, treeNode) {\n      var onClick = props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    var onNodeDoubleClick = function onNodeDoubleClick(e, treeNode) {\n      var onDblclick = props.onDblclick;\n\n      if (onDblclick) {\n        onDblclick(e, treeNode);\n      }\n    };\n\n    var onNodeSelect = function onNodeSelect(e, treeNode) {\n      var newSelectedKeys = selectedKeys.value;\n      var onSelect = props.onSelect,\n          multiple = props.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.value.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        newSelectedKeys = arrDel(newSelectedKeys, key);\n      } else if (!multiple) {\n        newSelectedKeys = [key];\n      } else {\n        newSelectedKeys = arrAdd(newSelectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var keyEntitiesValue = keyEntities.value;\n      var selectedNodes = newSelectedKeys.map(function (selectedKey) {\n        var entity = keyEntitiesValue[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      if (props.selectedKeys === undefined) {\n        selectedKeys.value = newSelectedKeys;\n      }\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e\n        });\n      }\n    };\n\n    var onNodeCheck = function onNodeCheck(e, treeNode, checked) {\n      var checkStrictly = props.checkStrictly,\n          onCheck = props.onCheck;\n      var key = treeNode[fieldNames.value.key]; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      var keyEntitiesValue = keyEntities.value;\n\n      if (checkStrictly) {\n        var newCheckedKeys = checked ? arrAdd(checkedKeys.value, key) : arrDel(checkedKeys.value, key);\n        var newHalfCheckedKeys = arrDel(halfCheckedKeys.value, key);\n        checkedObj = {\n          checked: newCheckedKeys,\n          halfChecked: newHalfCheckedKeys\n        };\n        eventObj.checkedNodes = newCheckedKeys.map(function (checkedKey) {\n          return keyEntitiesValue[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n        }\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(checkedKeys.value), [key]), true, keyEntitiesValue, maxLevel.value, levelEntities.value),\n            _newCheckedKeys = _conductCheck.checkedKeys,\n            _newHalfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_newCheckedKeys);\n          keySet[\"delete\"](key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _newHalfCheckedKeys\n          }, keyEntitiesValue, maxLevel.value, levelEntities.value);\n\n          _newCheckedKeys = _conductCheck2.checkedKeys;\n          _newHalfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _newCheckedKeys; // [Legacy] This is used for vc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _newHalfCheckedKeys;\n\n        _newCheckedKeys.forEach(function (checkedKey) {\n          var entity = keyEntitiesValue[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = _newCheckedKeys;\n          halfCheckedKeys.value = _newHalfCheckedKeys;\n        }\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    var onNodeLoad = function onNodeLoad(treeNode) {\n      var key = treeNode[fieldNames.value.key];\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        var loadData = props.loadData,\n            onLoad = props.onLoad;\n\n        if (!loadData || loadedKeysSet.value.has(key) || loadingKeysSet.value.has(key)) {\n          return null;\n        } // Process load data\n\n\n        var promise = loadData(treeNode);\n        promise.then(function () {\n          var newLoadedKeys = arrAdd(loadedKeys.value, key);\n          var newLoadingKeys = arrDel(loadingKeys.value, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n          // https://github.com/ant-design/ant-design/issues/12464\n\n          if (onLoad) {\n            onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n          }\n\n          if (props.loadedKeys === undefined) {\n            loadedKeys.value = newLoadedKeys;\n          }\n\n          loadingKeys.value = newLoadingKeys;\n          resolve();\n        })[\"catch\"](function (e) {\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          loadingKeys.value = newLoadingKeys; // If exceed max retry times, we give up retry\n\n          loadingRetryTimes[key] = (loadingRetryTimes[key] || 0) + 1;\n\n          if (loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n            warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n            var newLoadedKeys = arrAdd(loadedKeys.value, key);\n\n            if (props.loadedKeys === undefined) {\n              loadedKeys.value = newLoadedKeys;\n            }\n\n            resolve();\n          }\n\n          reject(e);\n        });\n        loadingKeys.value = arrAdd(loadingKeys.value, key);\n      }); // Not care warning if we ignore this\n\n      loadPromise[\"catch\"](function () {});\n      return loadPromise;\n    };\n\n    var onNodeMouseEnter = function onNodeMouseEnter(event, node) {\n      var onMouseenter = props.onMouseenter;\n\n      if (onMouseenter) {\n        onMouseenter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    var onNodeMouseLeave = function onNodeMouseLeave(event, node) {\n      var onMouseleave = props.onMouseleave;\n\n      if (onMouseleave) {\n        onMouseleave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    var onNodeContextMenu = function onNodeContextMenu(event, node) {\n      var onRightClick = props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    var onFocus = function onFocus(e) {\n      var onFocus = props.onFocus;\n      focused.value = true;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n\n    var onBlur = function onBlur(e) {\n      var onBlur = props.onBlur;\n      focused.value = false;\n      onActiveChange(null);\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    var onNodeExpand = function onNodeExpand(e, treeNode) {\n      var newExpandedKeys = expandedKeys.value;\n      var onExpand = props.onExpand,\n          loadData = props.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.value.key]; // Do nothing when motion is in progress\n\n      if (listChanging.value) {\n        return;\n      } // Update selected keys\n\n\n      var index = newExpandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        newExpandedKeys = arrAdd(newExpandedKeys, key);\n      } else {\n        newExpandedKeys = arrDel(newExpandedKeys, key);\n      }\n\n      setExpandedKeys(newExpandedKeys);\n\n      if (onExpand) {\n        onExpand(newExpandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {// [Legacy] Refresh logic\n            // const newFlattenTreeData = flattenTreeData(\n            //   treeData.value,\n            //   newExpandedKeys,\n            //   fieldNames.value,\n            // );\n            // flattenNodes.value = newFlattenTreeData;\n          })[\"catch\"](function (e) {\n            var expandedKeysToRestore = arrDel(expandedKeys.value, key);\n            setExpandedKeys(expandedKeysToRestore);\n            Promise.reject(e);\n          });\n        }\n      }\n    };\n\n    var onListChangeStart = function onListChangeStart() {\n      listChanging.value = true;\n    };\n\n    var onListChangeEnd = function onListChangeEnd() {\n      setTimeout(function () {\n        listChanging.value = false;\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    var onActiveChange = function onActiveChange(newActiveKey) {\n      var onActiveChange = props.onActiveChange;\n\n      if (activeKey.value === newActiveKey) {\n        return;\n      }\n\n      if (props.activeKey !== undefined) {\n        activeKey.value = newActiveKey;\n      }\n\n      if (newActiveKey !== null) {\n        scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    var activeItem = computed(function () {\n      if (activeKey.value === null) {\n        return null;\n      }\n\n      return flattenNodes.value.find(function (_ref6) {\n        var key = _ref6.key;\n        return key === activeKey.value;\n      }) || null;\n    });\n\n    var offsetActiveKey = function offsetActiveKey(offset) {\n      var index = flattenNodes.value.findIndex(function (_ref7) {\n        var key = _ref7.key;\n        return key === activeKey.value;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.value.length;\n      }\n\n      index = (index + offset + flattenNodes.value.length) % flattenNodes.value.length;\n      var item = flattenNodes.value[index];\n\n      if (item) {\n        var key = item.key;\n        onActiveChange(key);\n      } else {\n        onActiveChange(null);\n      }\n    };\n\n    var activeItemEventNode = computed(function () {\n      return convertNodePropsToEventData(_extends(_extends({}, getTreeNodeProps(activeKey.value, treeNodeRequiredProps.value)), {\n        data: activeItem.value.data,\n        active: true\n      }));\n    });\n\n    var onKeydown = function onKeydown(event) {\n      var onKeydown = props.onKeydown,\n          checkable = props.checkable,\n          selectable = props.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var item = activeItem.value;\n\n      if (item && item.data) {\n        var expandable = item.data.isLeaf === false || !!(item.data.children || []).length;\n        var eventNode = activeItemEventNode.value;\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.parent) {\n                onActiveChange(item.parent.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.children && item.children.length) {\n                onActiveChange(item.children[0].key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                onNodeCheck({}, eventNode, !checkedKeysSet.value.has(activeKey.value));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeydown) {\n        onKeydown(event);\n      }\n    };\n\n    expose({\n      onNodeExpand: onNodeExpand,\n      scrollTo: scrollTo,\n      onKeydown: onKeydown,\n      selectedKeys: computed(function () {\n        return selectedKeys.value;\n      }),\n      checkedKeys: computed(function () {\n        return checkedKeys.value;\n      }),\n      halfCheckedKeys: computed(function () {\n        return halfCheckedKeys.value;\n      }),\n      loadedKeys: computed(function () {\n        return loadedKeys.value;\n      }),\n      loadingKeys: computed(function () {\n        return loadingKeys.value;\n      }),\n      expandedKeys: computed(function () {\n        return expandedKeys.value;\n      })\n    });\n    onUnmounted(function () {\n      window.removeEventListener('dragend', onWindowDragEnd);\n      destroyed.value = true;\n    });\n    useProvideKeysState({\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      loadedKeys: loadedKeys,\n      loadingKeys: loadingKeys,\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys,\n      expandedKeysSet: expandedKeysSet,\n      selectedKeysSet: selectedKeysSet,\n      loadedKeysSet: loadedKeysSet,\n      loadingKeysSet: loadingKeysSet,\n      checkedKeysSet: checkedKeysSet,\n      halfCheckedKeysSet: halfCheckedKeysSet,\n      flattenNodes: flattenNodes\n    });\n    return function () {\n      var _classNames;\n\n      var draggingNodeKey = dragState.draggingNodeKey,\n          dropLevelOffset = dragState.dropLevelOffset,\n          dropContainerKey = dragState.dropContainerKey,\n          dropTargetKey = dragState.dropTargetKey,\n          dropPosition = dragState.dropPosition,\n          dragOverNodeKey = dragState.dragOverNodeKey;\n      var prefixCls = props.prefixCls,\n          showLine = props.showLine,\n          focusable = props.focusable,\n          _props$tabindex = props.tabindex,\n          tabindex = _props$tabindex === void 0 ? 0 : _props$tabindex,\n          selectable = props.selectable,\n          showIcon = props.showIcon,\n          _props$icon = props.icon,\n          icon = _props$icon === void 0 ? slots.icon : _props$icon,\n          switcherIcon = props.switcherIcon,\n          draggable = props.draggable,\n          checkable = props.checkable,\n          checkStrictly = props.checkStrictly,\n          disabled = props.disabled,\n          motion = props.motion,\n          loadData = props.loadData,\n          filterTreeNode = props.filterTreeNode,\n          height = props.height,\n          itemHeight = props.itemHeight,\n          virtual = props.virtual,\n          dropIndicatorRender = props.dropIndicatorRender,\n          onContextmenu = props.onContextmenu,\n          onScroll = props.onScroll,\n          direction = props.direction;\n      var className = attrs[\"class\"],\n          style = attrs.style;\n      var domProps = pickAttrs(_extends(_extends({}, props), attrs), {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return _createVNode(TreeContext, {\n        \"value\": {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          customCheckable: slots.checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities.value,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          dragging: draggingNodeKey !== null,\n          indent: indent.value,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: onNodeClick,\n          onNodeDoubleClick: onNodeDoubleClick,\n          onNodeExpand: onNodeExpand,\n          onNodeSelect: onNodeSelect,\n          onNodeCheck: onNodeCheck,\n          onNodeLoad: onNodeLoad,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          onNodeContextMenu: onNodeContextMenu,\n          onNodeDragStart: onNodeDragStart,\n          onNodeDragEnter: onNodeDragEnter,\n          onNodeDragOver: onNodeDragOver,\n          onNodeDragLeave: onNodeDragLeave,\n          onNodeDragEnd: onNodeDragEnd,\n          onNodeDrop: onNodeDrop,\n          slots: slots\n        }\n      }, {\n        \"default\": function _default() {\n          return [_createVNode(\"div\", {\n            \"role\": \"tree\",\n            \"class\": classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused.value), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey.value !== null), _classNames))\n          }, [_createVNode(NodeList, _objectSpread({\n            \"ref\": listRef,\n            \"prefixCls\": prefixCls,\n            \"style\": style,\n            \"disabled\": disabled,\n            \"selectable\": selectable,\n            \"checkable\": !!checkable,\n            \"motion\": motion,\n            \"height\": height,\n            \"itemHeight\": itemHeight,\n            \"virtual\": virtual,\n            \"focusable\": focusable,\n            \"focused\": focused.value,\n            \"tabindex\": tabindex,\n            \"activeItem\": activeItem.value,\n            \"onFocus\": onFocus,\n            \"onBlur\": onBlur,\n            \"onKeydown\": onKeydown,\n            \"onActiveChange\": onActiveChange,\n            \"onListChangeStart\": onListChangeStart,\n            \"onListChangeEnd\": onListChangeEnd,\n            \"onContextmenu\": onContextmenu,\n            \"onScroll\": onScroll\n          }, domProps), null)])];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_typeof","_toConsumableArray","_slicedToArray","_defineProperty","_extends","createVNode","_createVNode","useProvideKeysState","TreeContext","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","convertNodePropsToEventData","getTreeNodeProps","fillFieldNames","NodeList","MOTION_KEY","MotionEntity","conductCheck","DropIndicator","computed","defineComponent","onUnmounted","reactive","ref","shallowRef","watch","watchEffect","nextTick","toRaw","initDefaultProps","treeProps","warning","KeyCode","classNames","pickAttrs","useMaxLevel","MAX_RETRY_TIMES","name","inheritAttrs","slots","props","prefixCls","showLine","showIcon","selectable","multiple","checkable","disabled","checkStrictly","draggable","defaultExpandParent","autoExpandParent","defaultExpandAll","defaultExpandedKeys","defaultCheckedKeys","defaultSelectedKeys","dropIndicatorRender","allowDrop","setup","_ref","attrs","expose","destroyed","delayedDragEnterLogic","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","loadingRetryTimes","dragState","draggingNodeKey","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","children","value","undefined","slice","immediate","deep","keyEntities","focused","activeKey","listChanging","fieldNames","listRef","dragStartMousePosition","dragNode","currentMouseOverDroppableNodeKey","treeNodeRequiredProps","expandedKeysSet","selectedKeysSet","loadedKeysSet","loadingKeysSet","checkedKeysSet","halfCheckedKeysSet","Set","entitiesMap","init","_ref2","_ref3","_ref4","_newKeys","newAutoExpandParent","_ref5","_oldKeys","oldAutoExpandParent","keys","cloneKeyEntities","Object","map","key","flattenNodes","_useMaxLevel","maxLevel","levelEntities","checkedKeyEntity","_checkedKeyEntity","_checkedKeyEntity$che","newCheckedKeys","_checkedKeyEntity$hal","newHalfCheckedKeys","conductKeys","resetDragState","scrollTo","scroll","val","flush","setExpandedKeys","cleanDragState","onNodeDragEnd","event","node","onDragend","eventData","onWindowDragEnd","window","removeEventListener","onNodeDragStart","onDragstart","eventKey","x","clientX","y","clientY","newExpandedKeys","getIndentWidth","addEventListener","onNodeDragEnter","onDragenter","onExpand","direction","pos","_calcDropPosition","indexOf","forEach","clearTimeout","setTimeout","entity","length","expanded","nativeEvent","onNodeDragOver","onDragover","_calcDropPosition2","onNodeDragLeave","currentTarget","contains","relatedTarget","onDragleave","onNodeDrop","_node","outsideTree","arguments","_a","onDrop","abstractDropNodeProps","active","activeItem","data","dropToChild","posArr","dropResult","dragNodesKeys","concat","dropToGap","Number","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDblclick","onNodeSelect","newSelectedKeys","onSelect","selected","targetSelected","keyEntitiesValue","selectedNodes","selectedKey","filter","onNodeCheck","checked","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_newCheckedKeys","_newHalfCheckedKeys","keySet","_conductCheck2","Array","from","checkedNodesPositions","push","onNodeLoad","loadPromise","Promise","resolve","reject","loadData","onLoad","has","promise","then","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseenter","onNodeMouseLeave","onMouseleave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","onNodeExpand","index","targetExpanded","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","find","_ref6","offsetActiveKey","offset","findIndex","_ref7","item","activeItemEventNode","onKeydown","which","UP","DOWN","expandable","isLeaf","eventNode","LEFT","parent","RIGHT","ENTER","SPACE","disableCheckbox","_classNames","focusable","_props$tabindex","tabindex","_props$icon","icon","switcherIcon","motion","filterTreeNode","height","itemHeight","virtual","onContextmenu","onScroll","className","style","domProps","aria","draggableConfig","nodeDraggable","customCheckable","dragging","_default"],"sources":["/home/orange/Desktop/project-catalog-antd/node_modules/ant-design-vue/es/vc-tree/Tree.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useProvideKeysState, TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nimport { computed, defineComponent, onUnmounted, reactive, ref, shallowRef, watch, watchEffect, nextTick, toRaw } from 'vue';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { treeProps } from './props';\nimport { warning } from '../vc-util/warning';\nimport KeyCode from '../_util/KeyCode';\nimport classNames from '../_util/classNames';\nimport pickAttrs from '../_util/pickAttrs';\nimport useMaxLevel from './useMaxLevel';\nvar MAX_RETRY_TIMES = 10;\nexport default defineComponent({\n  name: 'Tree',\n  inheritAttrs: false,\n  slots: ['checkable', 'title', 'icon', 'titleRender'],\n  props: initDefaultProps(treeProps(), {\n    prefixCls: 'vc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: [],\n    dropIndicatorRender: DropIndicator,\n    allowDrop: function allowDrop() {\n      return true;\n    }\n  }),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        slots = _ref.slots,\n        expose = _ref.expose;\n    var destroyed = ref(false);\n    var delayedDragEnterLogic = {};\n    var indent = ref();\n    var selectedKeys = shallowRef([]);\n    var checkedKeys = shallowRef([]);\n    var halfCheckedKeys = shallowRef([]);\n    var loadedKeys = shallowRef([]);\n    var loadingKeys = shallowRef([]);\n    var expandedKeys = shallowRef([]);\n    var loadingRetryTimes = {};\n    var dragState = reactive({\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null\n    });\n    var treeData = shallowRef([]);\n    watch([function () {\n      return props.treeData;\n    }, function () {\n      return props.children;\n    }], function () {\n      treeData.value = props.treeData !== undefined ? toRaw(props.treeData).slice() : convertTreeToData(toRaw(props.children));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var keyEntities = shallowRef({});\n    var focused = ref(false);\n    var activeKey = ref(null);\n    var listChanging = ref(false);\n    var fieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames);\n    });\n    var listRef = ref();\n    var dragStartMousePosition = null;\n    var dragNode = null;\n    var currentMouseOverDroppableNodeKey = null;\n    var treeNodeRequiredProps = computed(function () {\n      return {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey: dragState.dragOverNodeKey,\n        dropPosition: dragState.dropPosition,\n        keyEntities: keyEntities.value\n      };\n    });\n    var expandedKeysSet = computed(function () {\n      return new Set(expandedKeys.value);\n    });\n    var selectedKeysSet = computed(function () {\n      return new Set(selectedKeys.value);\n    });\n    var loadedKeysSet = computed(function () {\n      return new Set(loadedKeys.value);\n    });\n    var loadingKeysSet = computed(function () {\n      return new Set(loadingKeys.value);\n    });\n    var checkedKeysSet = computed(function () {\n      return new Set(checkedKeys.value);\n    });\n    var halfCheckedKeysSet = computed(function () {\n      return new Set(halfCheckedKeys.value);\n    });\n    watchEffect(function () {\n      if (treeData.value) {\n        var entitiesMap = convertDataToEntities(treeData.value, {\n          fieldNames: fieldNames.value\n        });\n        keyEntities.value = _extends(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities);\n      }\n    });\n    var init = false; // 处理 defaultXxxx api, 仅仅首次有效\n\n    watch([function () {\n      return props.expandedKeys;\n    }, function () {\n      return props.autoExpandParent;\n    }, keyEntities], // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n          _newKeys = _ref4[0],\n          newAutoExpandParent = _ref4[1];\n\n      var _ref5 = _slicedToArray(_ref3, 2),\n          _oldKeys = _ref5[0],\n          oldAutoExpandParent = _ref5[1];\n\n      var keys = expandedKeys.value; // ================ expandedKeys =================\n\n      if (props.expandedKeys !== undefined || init && newAutoExpandParent !== oldAutoExpandParent) {\n        keys = props.autoExpandParent || !init && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities.value) : props.expandedKeys;\n      } else if (!init && props.defaultExpandAll) {\n        var cloneKeyEntities = _extends({}, keyEntities.value);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        keys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!init && props.defaultExpandedKeys) {\n        keys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities.value) : props.defaultExpandedKeys;\n      }\n\n      if (keys) {\n        expandedKeys.value = keys;\n      }\n\n      init = true;\n    }, {\n      immediate: true\n    }); // ================ flattenNodes =================\n\n    var flattenNodes = shallowRef([]);\n    watchEffect(function () {\n      flattenNodes.value = flattenTreeData(treeData.value, expandedKeys.value, fieldNames.value);\n    }); // ================ selectedKeys =================\n\n    watchEffect(function () {\n      if (props.selectable) {\n        if (props.selectedKeys !== undefined) {\n          selectedKeys.value = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!init && props.defaultSelectedKeys) {\n          selectedKeys.value = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n    });\n\n    var _useMaxLevel = useMaxLevel(keyEntities),\n        maxLevel = _useMaxLevel.maxLevel,\n        levelEntities = _useMaxLevel.levelEntities; // ================= checkedKeys =================\n\n\n    watchEffect(function () {\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (props.checkedKeys !== undefined) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!init && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData.value) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: checkedKeys.value,\n            halfCheckedKeys: halfCheckedKeys.value\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              newCheckedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              newHalfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(newCheckedKeys, true, keyEntities.value, maxLevel.value, levelEntities.value);\n            newCheckedKeys = conductKeys.checkedKeys;\n            newHalfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n    }); // ================= loadedKeys ==================\n\n    watchEffect(function () {\n      if (props.loadedKeys) {\n        loadedKeys.value = props.loadedKeys;\n      }\n    });\n\n    var resetDragState = function resetDragState() {\n      _extends(dragState, {\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    };\n\n    var scrollTo = function scrollTo(scroll) {\n      listRef.value.scrollTo(scroll);\n    };\n\n    watch(function () {\n      return props.activeKey;\n    }, function () {\n      if (props.activeKey !== undefined) {\n        activeKey.value = props.activeKey;\n      }\n    }, {\n      immediate: true\n    });\n    watch(activeKey, function (val) {\n      nextTick(function () {\n        if (val !== null) {\n          scrollTo({\n            key: val\n          });\n        }\n      });\n    }, {\n      immediate: true,\n      flush: 'post'\n    }); // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n    var setExpandedKeys = function setExpandedKeys(keys) {\n      if (props.expandedKeys === undefined) {\n        expandedKeys.value = keys;\n      }\n    };\n\n    var cleanDragState = function cleanDragState() {\n      if (dragState.draggingNodeKey !== null) {\n        _extends(dragState, {\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      dragStartMousePosition = null;\n      currentMouseOverDroppableNodeKey = null;\n    }; // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n\n\n    var onNodeDragEnd = function onNodeDragEnd(event, node) {\n      var onDragend = props.onDragend;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      onDragend === null || onDragend === void 0 ? void 0 : onDragend({\n        event: event,\n        node: node.eventData\n      });\n      dragNode = null;\n    }; // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n\n\n    var onWindowDragEnd = function onWindowDragEnd(event) {\n      onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', onWindowDragEnd);\n    };\n\n    var onNodeDragStart = function onNodeDragStart(event, node) {\n      var onDragstart = props.onDragstart;\n      var eventKey = node.eventKey,\n          eventData = node.eventData;\n      dragNode = node;\n      dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys.value, eventKey);\n      dragState.draggingNodeKey = eventKey;\n      dragState.dragChildrenKeys = getDragChildrenKeys(eventKey, keyEntities.value);\n      indent.value = listRef.value.getIndentWidth();\n      setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', onWindowDragEnd);\n\n      if (onDragstart) {\n        onDragstart({\n          event: event,\n          node: eventData\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    var onNodeDragEnter = function onNodeDragEnter(event, node) {\n      var onDragenter = props.onDragenter,\n          onExpand = props.onExpand,\n          allowDrop = props.allowDrop,\n          direction = props.direction;\n      var pos = node.pos,\n          eventKey = node.eventKey; // record the key of node which is latest entered, used in dragleave event.\n\n      if (currentMouseOverDroppableNodeKey !== eventKey) {\n        currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        resetDragState();\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        resetDragState();\n        return;\n      } // Side effect for delay drag\n\n\n      if (!delayedDragEnterLogic) {\n        delayedDragEnterLogic = {};\n      }\n\n      Object.keys(delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.eventKey !== node.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (dragState.draggingNodeKey === null) return;\n          var newExpandedKeys = expandedKeys.value.slice();\n          var entity = keyEntities.value[node.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys.value, node.eventKey);\n          }\n\n          setExpandedKeys(newExpandedKeys);\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: node.eventData,\n              expanded: true,\n              nativeEvent: event\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        resetDragState();\n        return;\n      } // Update drag over node and drag state\n\n\n      _extends(dragState, {\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragenter) {\n        onDragenter({\n          event: event,\n          node: node.eventData,\n          expandedKeys: expandedKeys.value\n        });\n      }\n    };\n\n    var onNodeDragOver = function onNodeDragOver(event, node) {\n      var onDragover = props.onDragover,\n          allowDrop = props.allowDrop,\n          direction = props.direction;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(dragState.dropPosition === null && dragState.dropLevelOffset === null && dragState.dropTargetKey === null && dragState.dropContainerKey === null && dragState.dropTargetPos === null && dragState.dropAllowed === false && dragState.dragOverNodeKey === null)) {\n          resetDragState();\n        }\n      } else if (!(dropPosition === dragState.dropPosition && dropLevelOffset === dragState.dropLevelOffset && dropTargetKey === dragState.dropTargetKey && dropContainerKey === dragState.dropContainerKey && dropTargetPos === dragState.dropTargetPos && dropAllowed === dragState.dropAllowed && dragOverNodeKey === dragState.dragOverNodeKey)) {\n        _extends(dragState, {\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragover) {\n        onDragover({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n\n    var onNodeDragLeave = function onNodeDragLeave(event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (currentMouseOverDroppableNodeKey === node.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        resetDragState();\n        currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragleave = props.onDragleave;\n\n      if (onDragleave) {\n        onDragleave({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n\n    var onNodeDrop = function onNodeDrop(event, _node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var _a;\n\n      var dragChildrenKeys = dragState.dragChildrenKeys,\n          dropPosition = dragState.dropPosition,\n          dropTargetKey = dragState.dropTargetKey,\n          dropTargetPos = dragState.dropTargetPos,\n          dropAllowed = dragState.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = props.onDrop;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _extends(_extends({}, getTreeNodeProps(dropTargetKey, toRaw(treeNodeRequiredProps.value))), {\n        active: ((_a = activeItem.value) === null || _a === void 0 ? void 0 : _a.key) === dropTargetKey,\n        data: keyEntities.value[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. Maybe this is a bug of ant-design-vue. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: dragNode ? dragNode.eventData : null,\n        dragNodesKeys: [dragNode.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n\n      dragNode = null;\n    };\n\n    var onNodeClick = function onNodeClick(e, treeNode) {\n      var onClick = props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    var onNodeDoubleClick = function onNodeDoubleClick(e, treeNode) {\n      var onDblclick = props.onDblclick;\n\n      if (onDblclick) {\n        onDblclick(e, treeNode);\n      }\n    };\n\n    var onNodeSelect = function onNodeSelect(e, treeNode) {\n      var newSelectedKeys = selectedKeys.value;\n      var onSelect = props.onSelect,\n          multiple = props.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.value.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        newSelectedKeys = arrDel(newSelectedKeys, key);\n      } else if (!multiple) {\n        newSelectedKeys = [key];\n      } else {\n        newSelectedKeys = arrAdd(newSelectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var keyEntitiesValue = keyEntities.value;\n      var selectedNodes = newSelectedKeys.map(function (selectedKey) {\n        var entity = keyEntitiesValue[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      if (props.selectedKeys === undefined) {\n        selectedKeys.value = newSelectedKeys;\n      }\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e\n        });\n      }\n    };\n\n    var onNodeCheck = function onNodeCheck(e, treeNode, checked) {\n      var checkStrictly = props.checkStrictly,\n          onCheck = props.onCheck;\n      var key = treeNode[fieldNames.value.key]; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      var keyEntitiesValue = keyEntities.value;\n\n      if (checkStrictly) {\n        var newCheckedKeys = checked ? arrAdd(checkedKeys.value, key) : arrDel(checkedKeys.value, key);\n        var newHalfCheckedKeys = arrDel(halfCheckedKeys.value, key);\n        checkedObj = {\n          checked: newCheckedKeys,\n          halfChecked: newHalfCheckedKeys\n        };\n        eventObj.checkedNodes = newCheckedKeys.map(function (checkedKey) {\n          return keyEntitiesValue[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n        }\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(checkedKeys.value), [key]), true, keyEntitiesValue, maxLevel.value, levelEntities.value),\n            _newCheckedKeys = _conductCheck.checkedKeys,\n            _newHalfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_newCheckedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _newHalfCheckedKeys\n          }, keyEntitiesValue, maxLevel.value, levelEntities.value);\n\n          _newCheckedKeys = _conductCheck2.checkedKeys;\n          _newHalfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _newCheckedKeys; // [Legacy] This is used for vc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _newHalfCheckedKeys;\n\n        _newCheckedKeys.forEach(function (checkedKey) {\n          var entity = keyEntitiesValue[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = _newCheckedKeys;\n          halfCheckedKeys.value = _newHalfCheckedKeys;\n        }\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    var onNodeLoad = function onNodeLoad(treeNode) {\n      var key = treeNode[fieldNames.value.key];\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        var loadData = props.loadData,\n            onLoad = props.onLoad;\n\n        if (!loadData || loadedKeysSet.value.has(key) || loadingKeysSet.value.has(key)) {\n          return null;\n        } // Process load data\n\n\n        var promise = loadData(treeNode);\n        promise.then(function () {\n          var newLoadedKeys = arrAdd(loadedKeys.value, key);\n          var newLoadingKeys = arrDel(loadingKeys.value, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n          // https://github.com/ant-design/ant-design/issues/12464\n\n          if (onLoad) {\n            onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n          }\n\n          if (props.loadedKeys === undefined) {\n            loadedKeys.value = newLoadedKeys;\n          }\n\n          loadingKeys.value = newLoadingKeys;\n          resolve();\n        }).catch(function (e) {\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          loadingKeys.value = newLoadingKeys; // If exceed max retry times, we give up retry\n\n          loadingRetryTimes[key] = (loadingRetryTimes[key] || 0) + 1;\n\n          if (loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n            warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n            var newLoadedKeys = arrAdd(loadedKeys.value, key);\n\n            if (props.loadedKeys === undefined) {\n              loadedKeys.value = newLoadedKeys;\n            }\n\n            resolve();\n          }\n\n          reject(e);\n        });\n        loadingKeys.value = arrAdd(loadingKeys.value, key);\n      }); // Not care warning if we ignore this\n\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n\n    var onNodeMouseEnter = function onNodeMouseEnter(event, node) {\n      var onMouseenter = props.onMouseenter;\n\n      if (onMouseenter) {\n        onMouseenter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    var onNodeMouseLeave = function onNodeMouseLeave(event, node) {\n      var onMouseleave = props.onMouseleave;\n\n      if (onMouseleave) {\n        onMouseleave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    var onNodeContextMenu = function onNodeContextMenu(event, node) {\n      var onRightClick = props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    var onFocus = function onFocus(e) {\n      var onFocus = props.onFocus;\n      focused.value = true;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n\n    var onBlur = function onBlur(e) {\n      var onBlur = props.onBlur;\n      focused.value = false;\n      onActiveChange(null);\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    var onNodeExpand = function onNodeExpand(e, treeNode) {\n      var newExpandedKeys = expandedKeys.value;\n      var onExpand = props.onExpand,\n          loadData = props.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.value.key]; // Do nothing when motion is in progress\n\n      if (listChanging.value) {\n        return;\n      } // Update selected keys\n\n\n      var index = newExpandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        newExpandedKeys = arrAdd(newExpandedKeys, key);\n      } else {\n        newExpandedKeys = arrDel(newExpandedKeys, key);\n      }\n\n      setExpandedKeys(newExpandedKeys);\n\n      if (onExpand) {\n        onExpand(newExpandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {// [Legacy] Refresh logic\n            // const newFlattenTreeData = flattenTreeData(\n            //   treeData.value,\n            //   newExpandedKeys,\n            //   fieldNames.value,\n            // );\n            // flattenNodes.value = newFlattenTreeData;\n          }).catch(function (e) {\n            var expandedKeysToRestore = arrDel(expandedKeys.value, key);\n            setExpandedKeys(expandedKeysToRestore);\n            Promise.reject(e);\n          });\n        }\n      }\n    };\n\n    var onListChangeStart = function onListChangeStart() {\n      listChanging.value = true;\n    };\n\n    var onListChangeEnd = function onListChangeEnd() {\n      setTimeout(function () {\n        listChanging.value = false;\n      });\n    }; // =========================== Keyboard ===========================\n\n\n    var onActiveChange = function onActiveChange(newActiveKey) {\n      var onActiveChange = props.onActiveChange;\n\n      if (activeKey.value === newActiveKey) {\n        return;\n      }\n\n      if (props.activeKey !== undefined) {\n        activeKey.value = newActiveKey;\n      }\n\n      if (newActiveKey !== null) {\n        scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    var activeItem = computed(function () {\n      if (activeKey.value === null) {\n        return null;\n      }\n\n      return flattenNodes.value.find(function (_ref6) {\n        var key = _ref6.key;\n        return key === activeKey.value;\n      }) || null;\n    });\n\n    var offsetActiveKey = function offsetActiveKey(offset) {\n      var index = flattenNodes.value.findIndex(function (_ref7) {\n        var key = _ref7.key;\n        return key === activeKey.value;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.value.length;\n      }\n\n      index = (index + offset + flattenNodes.value.length) % flattenNodes.value.length;\n      var item = flattenNodes.value[index];\n\n      if (item) {\n        var key = item.key;\n        onActiveChange(key);\n      } else {\n        onActiveChange(null);\n      }\n    };\n\n    var activeItemEventNode = computed(function () {\n      return convertNodePropsToEventData(_extends(_extends({}, getTreeNodeProps(activeKey.value, treeNodeRequiredProps.value)), {\n        data: activeItem.value.data,\n        active: true\n      }));\n    });\n\n    var onKeydown = function onKeydown(event) {\n      var onKeydown = props.onKeydown,\n          checkable = props.checkable,\n          selectable = props.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var item = activeItem.value;\n\n      if (item && item.data) {\n        var expandable = item.data.isLeaf === false || !!(item.data.children || []).length;\n        var eventNode = activeItemEventNode.value;\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.parent) {\n                onActiveChange(item.parent.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.children && item.children.length) {\n                onActiveChange(item.children[0].key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                onNodeCheck({}, eventNode, !checkedKeysSet.value.has(activeKey.value));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeydown) {\n        onKeydown(event);\n      }\n    };\n\n    expose({\n      onNodeExpand: onNodeExpand,\n      scrollTo: scrollTo,\n      onKeydown: onKeydown,\n      selectedKeys: computed(function () {\n        return selectedKeys.value;\n      }),\n      checkedKeys: computed(function () {\n        return checkedKeys.value;\n      }),\n      halfCheckedKeys: computed(function () {\n        return halfCheckedKeys.value;\n      }),\n      loadedKeys: computed(function () {\n        return loadedKeys.value;\n      }),\n      loadingKeys: computed(function () {\n        return loadingKeys.value;\n      }),\n      expandedKeys: computed(function () {\n        return expandedKeys.value;\n      })\n    });\n    onUnmounted(function () {\n      window.removeEventListener('dragend', onWindowDragEnd);\n      destroyed.value = true;\n    });\n    useProvideKeysState({\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      loadedKeys: loadedKeys,\n      loadingKeys: loadingKeys,\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys,\n      expandedKeysSet: expandedKeysSet,\n      selectedKeysSet: selectedKeysSet,\n      loadedKeysSet: loadedKeysSet,\n      loadingKeysSet: loadingKeysSet,\n      checkedKeysSet: checkedKeysSet,\n      halfCheckedKeysSet: halfCheckedKeysSet,\n      flattenNodes: flattenNodes\n    });\n    return function () {\n      var _classNames;\n\n      var draggingNodeKey = dragState.draggingNodeKey,\n          dropLevelOffset = dragState.dropLevelOffset,\n          dropContainerKey = dragState.dropContainerKey,\n          dropTargetKey = dragState.dropTargetKey,\n          dropPosition = dragState.dropPosition,\n          dragOverNodeKey = dragState.dragOverNodeKey;\n      var prefixCls = props.prefixCls,\n          showLine = props.showLine,\n          focusable = props.focusable,\n          _props$tabindex = props.tabindex,\n          tabindex = _props$tabindex === void 0 ? 0 : _props$tabindex,\n          selectable = props.selectable,\n          showIcon = props.showIcon,\n          _props$icon = props.icon,\n          icon = _props$icon === void 0 ? slots.icon : _props$icon,\n          switcherIcon = props.switcherIcon,\n          draggable = props.draggable,\n          checkable = props.checkable,\n          checkStrictly = props.checkStrictly,\n          disabled = props.disabled,\n          motion = props.motion,\n          loadData = props.loadData,\n          filterTreeNode = props.filterTreeNode,\n          height = props.height,\n          itemHeight = props.itemHeight,\n          virtual = props.virtual,\n          dropIndicatorRender = props.dropIndicatorRender,\n          onContextmenu = props.onContextmenu,\n          onScroll = props.onScroll,\n          direction = props.direction;\n      var className = attrs.class,\n          style = attrs.style;\n      var domProps = pickAttrs(_extends(_extends({}, props), attrs), {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return _createVNode(TreeContext, {\n        \"value\": {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          customCheckable: slots.checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities.value,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          dragging: draggingNodeKey !== null,\n          indent: indent.value,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: onNodeClick,\n          onNodeDoubleClick: onNodeDoubleClick,\n          onNodeExpand: onNodeExpand,\n          onNodeSelect: onNodeSelect,\n          onNodeCheck: onNodeCheck,\n          onNodeLoad: onNodeLoad,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          onNodeContextMenu: onNodeContextMenu,\n          onNodeDragStart: onNodeDragStart,\n          onNodeDragEnter: onNodeDragEnter,\n          onNodeDragOver: onNodeDragOver,\n          onNodeDragLeave: onNodeDragLeave,\n          onNodeDragEnd: onNodeDragEnd,\n          onNodeDrop: onNodeDrop,\n          slots: slots\n        }\n      }, {\n        default: function _default() {\n          return [_createVNode(\"div\", {\n            \"role\": \"tree\",\n            \"class\": classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused.value), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey.value !== null), _classNames))\n          }, [_createVNode(NodeList, _objectSpread({\n            \"ref\": listRef,\n            \"prefixCls\": prefixCls,\n            \"style\": style,\n            \"disabled\": disabled,\n            \"selectable\": selectable,\n            \"checkable\": !!checkable,\n            \"motion\": motion,\n            \"height\": height,\n            \"itemHeight\": itemHeight,\n            \"virtual\": virtual,\n            \"focusable\": focusable,\n            \"focused\": focused.value,\n            \"tabindex\": tabindex,\n            \"activeItem\": activeItem.value,\n            \"onFocus\": onFocus,\n            \"onBlur\": onBlur,\n            \"onKeydown\": onKeydown,\n            \"onActiveChange\": onActiveChange,\n            \"onListChangeStart\": onListChangeStart,\n            \"onListChangeEnd\": onListChangeEnd,\n            \"onContextmenu\": onContextmenu,\n            \"onScroll\": onScroll\n          }, domProps), null)])];\n        }\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}