{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/orange/Desktop/project-catalog-antd/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.string.code-point-at.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  var name = \"\";\n\n  var _iterator = _createForOfIteratorHelper(input),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier[\"default\"])(name)) {\n    name = \"_\".concat(name);\n  }\n\n  return name || \"_\";\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toIdentifier","_isValidIdentifier","require","_helperValidatorIdentifier","input","name","c","isIdentifierChar","codePointAt","replace","match","toUpperCase"],"sources":["/home/orange/Desktop/project-catalog-antd/node_modules/@babel/types/lib/converters/toIdentifier.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  let name = \"\";\n\n  for (const c of input) {\n    name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier.default)(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}"],"mappings":"AAAA;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,WAAP,GAAkBE,YAAlB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,iCAAD,CAAhC;;AAEA,IAAIC,0BAA0B,GAAGD,OAAO,CAAC,oCAAD,CAAxC;;AAEA,SAASF,YAAT,CAAsBI,KAAtB,EAA6B;EAC3BA,KAAK,GAAGA,KAAK,GAAG,EAAhB;EACA,IAAIC,IAAI,GAAG,EAAX;;EAF2B,2CAIXD,KAJW;EAAA;;EAAA;IAI3B,oDAAuB;MAAA,IAAZE,CAAY;MACrBD,IAAI,IAAI,CAAC,GAAGF,0BAA0B,CAACI,gBAA/B,EAAiDD,CAAC,CAACE,WAAF,CAAc,CAAd,CAAjD,IAAqEF,CAArE,GAAyE,GAAjF;IACD;EAN0B;IAAA;EAAA;IAAA;EAAA;;EAQ3BD,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,UAAb,EAAyB,EAAzB,CAAP;EACAJ,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,aAAb,EAA4B,UAAUC,KAAV,EAAiBJ,CAAjB,EAAoB;IACrD,OAAOA,CAAC,GAAGA,CAAC,CAACK,WAAF,EAAH,GAAqB,EAA7B;EACD,CAFM,CAAP;;EAIA,IAAI,CAAC,CAAC,GAAGV,kBAAkB,WAAtB,EAAgCI,IAAhC,CAAL,EAA4C;IAC1CA,IAAI,cAAOA,IAAP,CAAJ;EACD;;EAED,OAAOA,IAAI,IAAI,GAAf;AACD"},"metadata":{},"sourceType":"script"}