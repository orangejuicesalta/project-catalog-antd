{"ast":null,"code":"import _regeneratorRuntime from \"/home/orange/Desktop/project-catalog-antd/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/orange/Desktop/project-catalog-antd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport CatalogTree from \"./CatalogTree.vue\";\nimport ModalSearch from \"./ModalSearch.vue\";\nimport { ref } from \"vue\";\nimport { useStore } from '../stores/mainStore';\nexport default {\n  __name: 'Modal',\n  props: {\n    show: Boolean\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var store = useStore();\n    var tree = ref({\n      name: \"\",\n      nodes: [{\n        label: \"level1\",\n        nodes: [{\n          label: \"level1.1\"\n        }, {\n          label: \"level1.2\",\n          nodes: [{\n            label: \"level1.2.1\"\n          }]\n        }]\n      }, {\n        label: 'level2'\n      }]\n    });\n\n    function getCatalog() {\n      return _getCatalog.apply(this, arguments);\n    }\n\n    function _getCatalog() {\n      _getCatalog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://10.10.1.74:80/api/v1/catalog/categories', {\n                  headers: store.headers\n                });\n\n              case 2:\n                res = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getCatalog.apply(this, arguments);\n    }\n\n    var __returned__ = {\n      store: store,\n      props: props,\n      tree: tree,\n      getCatalog: getCatalog,\n      CatalogTree: CatalogTree,\n      ModalSearch: ModalSearch,\n      ref: ref,\n      useStore: useStore\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;;;AACA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;;;;;;;;;;IAEA,IAAMC,KAAK,GAAED,QAAQ,EAArB;IAKA,IAAIE,IAAI,GAAGH,GAAG,CAAC;MACbI,IAAI,EAAE,EADO;MAEbC,KAAK,EAAE,CACL;QACEC,KAAK,EAAE,QADT;QAEED,KAAK,EAAE,CACL;UACEC,KAAK,EAAE;QADT,CADK,EAIL;UACEA,KAAK,EAAE,UADT;UAEED,KAAK,EAAE,CACL;YACEC,KAAK,EAAE;UADT,CADK;QAFT,CAJK;MAFT,CADK,EAiBL;QACEA,KAAK,EAAE;MADT,CAjBK;IAFM,CAAD,CAAd;;aAyBeC;;;;;+EAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACoBC,KAAK,CAAC,gDAAD,EAAmD;kBACxEC,OAAO,EAAEP,KAAK,CAACO;gBADyD,CAAnD,CADzB;;cAAA;gBACQC,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA","names":["CatalogTree","ModalSearch","ref","useStore","store","tree","name","nodes","label","getCatalog","fetch","headers","res"],"sources":["/home/orange/Desktop/project-catalog-antd/src/components/Modal.vue"],"sourcesContent":["<script setup>\nimport CatalogTree from \"./CatalogTree.vue\";\nimport ModalSearch from \"./ModalSearch.vue\";\nimport { ref } from \"vue\";\nimport {useStore} from '../stores/mainStore'\n\nconst store =useStore()\nconst props = defineProps({\n  show: Boolean,\n});\n\nlet tree = ref({\n  name: \"\",\n  nodes: [\n    {\n      label: \"level1\",\n      nodes: [\n        {\n          label: \"level1.1\",\n        },\n        {\n          label: \"level1.2\",\n          nodes: [\n            {\n              label: \"level1.2.1\",\n            },\n          ],\n        },\n      ],\n    },\n    {\n      label: 'level2'\n    }\n  ],\n});\n\nasync function getCatalog() {\n  const res = await fetch('http://10.10.1.74:80/api/v1/catalog/categories', {\n    headers: store.headers\n  })\n  \n}\n</script>\n\n<template>\n  <div v-if=\"show\" class=\"ovarlay\">\n    <button @click=\"$emit('close')\">\n      <img src=\"../assets/Vectorexit.svg\" alt=\"icon\" />\n      <p>Закрыть</p>\n    </button>\n    <div class=\"modal\">\n      <ModalSearch />\n      <section>\n        <CatalogTree :label=\"tree.label\" :nodes=\"tree.nodes\" />\n      </section>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n$darkestColor: #029aad;\n\n.modal {\n  background-color: white;\n  position: fixed;\n  width: 1300px;\n  height: 100vh;\n  right: 0;\n  z-index: 100;\n  padding: 50px;\n  section {\n    width: 100%;\n    height: 100%;\n  }\n}\n.ovarlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 90;\n}\nbutton {\n  position: fixed;\n  height: 40px;\n  width: 130px;\n  right: 1300px;\n  top: 30px;\n  padding: 10px 19px;\n  background: $darkestColor;\n  border-radius: 10px 0px 0px 10px;\n  z-index: 100;\n  border: none;\n  display: flex;\n  align-items: center;\n  color: white;\n  gap: 10px;\n  cursor: pointer;\n  p {\n    font-weight: 400;\n    font-size: medium;\n    margin-bottom: 0;\n  }\n}\n\n@media only screen and (max-width: 1000px) {\n  .modal {\n    width: 700px;\n  }\n  button {\n    right: 700px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}