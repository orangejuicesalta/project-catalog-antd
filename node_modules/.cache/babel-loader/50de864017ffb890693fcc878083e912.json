{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"#1890ff\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_a_tree = _resolveComponent(\"a-tree\");\n\n  return _openBlock(), _createBlock(_component_a_tree, {\n    expandedKeys: _ctx.expandedKeys,\n    \"onUpdate:expandedKeys\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.expandedKeys = $event;\n    }),\n    selectedKeys: _ctx.selectedKeys,\n    \"onUpdate:selectedKeys\": _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.selectedKeys = $event;\n    }),\n    checkedKeys: _ctx.checkedKeys,\n    \"onUpdate:checkedKeys\": _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.checkedKeys = $event;\n    }),\n    checkable: \"\",\n    \"tree-data\": _ctx.treeData,\n    \"field-names\": _ctx.fieldNames\n  }, {\n    title: _withCtx(function (_ref) {\n      var name = _ref.name,\n          key = _ref.key;\n      return [key === '0-0-1' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString(name), 1\n      /* TEXT */\n      )) : (_openBlock(), _createElementBlock(_Fragment, {\n        key: 1\n      }, [_createTextVNode(_toDisplayString(name), 1\n      /* TEXT */\n      )], 64\n      /* STABLE_FRAGMENT */\n      ))];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"expandedKeys\", \"selectedKeys\", \"checkedKeys\", \"tree-data\", \"field-names\"]);\n}","map":{"version":3,"mappings":";;;;EAUmCA,KAAsB,EAAtB;IAAA;EAAA;;;;;uBATjCC,aAYSC,iBAZT,EAYS;IAXCC,YAAY,EAAEC,iBAWf;;aAXeA,oBAAYC;MAW3B;IAVCC,YAAY,EAAEF,iBAUf;;aAVeA,oBAAYC;MAU3B;IATCE,WAAW,EAAEH,gBASd;;aATcA,mBAAWC;MASzB;IARPG,SAAS,EAAT,EAQO;IAPN,aAAWJ,aAOL;IANN,eAAaA;EAMP,CAZT;IAQaK,KAAK,WACd;MAAA,IADkBC,IAClB,QADkBA,IAClB;MAAA,IADwBC,GACxB,QADwBA,GACxB;MAAA,OAD2B,CACfA,GAAG,8BAAfC,oBAAqE,MAArE,cAAqEC,iBAAdH,IAAc,CAArE,EAA2D;MAAA;MAA3D,oBACAE,oBAAsCE,SAAtC,EAAsC;QAAAH;MAAA,CAAtC,EAAsC,mCAAlBD,OAAI;MAAA;OAAc,CAAtC;;MAAA,EAF2B,CAC3B;IAAA,CADc;;;;GARlB;;EAAA","names":["style","_createBlock","_component_a_tree","expandedKeys","_ctx","$event","selectedKeys","checkedKeys","checkable","title","name","key","_createElementBlock","_toDisplayString","_Fragment"],"sourceRoot":"","sources":["/home/orange/Desktop/project-catalog-antd/src/components/Catalog.vue"],"sourcesContent":["<template>\n  <a-tree\n    v-model:expandedKeys=\"expandedKeys\"\n    v-model:selectedKeys=\"selectedKeys\"\n    v-model:checkedKeys=\"checkedKeys\"\n    checkable\n    :tree-data=\"treeData\"\n    :field-names=\"fieldNames\"\n  >\n    <template #title=\"{ name, key }\">\n      <span v-if=\"key === '0-0-1'\" style=\"color: #1890ff\">{{ name }}</span>\n      <template v-else>{{ name }}</template>\n    </template>\n  </a-tree>\n</template>\n<script>\nimport { defineComponent, ref, watch } from \"vue\";\nexport default defineComponent({\n  setup() {\n    const expandedKeys = ref([\"0-0-0\", \"0-0-1\"]);\n    const selectedKeys = ref([\"0-0-0\", \"0-0-1\"]);\n    const checkedKeys = ref([\"0-0-0\", \"0-0-1\"]);\n    const fieldNames = {\n      children: \"child\",\n      title: \"name\",\n    };\n    const treeData = [\n      {\n        name: ''\n      }\n    ];\n    async function getCatalog() {\n      const res = await fetch(\"http://10.10.1.74:80/api/v1/catalog/categories\", {\n        headers: store.headers,\n      });\n\n      const data = (await res.json())[0];\n      treeData.value = await data;\n    }\n    watch(expandedKeys, () => {\n      console.log(\"expandedKeys\", expandedKeys);\n    });\n    watch(selectedKeys, () => {\n      console.log(\"selectedKeys\", selectedKeys);\n    });\n    watch(checkedKeys, () => {\n      console.log(\"checkedKeys\", checkedKeys);\n    });\n    return {\n      expandedKeys,\n      selectedKeys,\n      checkedKeys,\n      fieldNames,\n      treeData: ref(treeData),\n    };\n  },\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}