{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports[\"import\"] = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports[\"super\"] = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInstantiationExpression = exports.tsInstantiationExpression = tsInstantiationExpression;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _validateNode = require(\"../validateNode\");\n\nfunction arrayExpression() {\n  var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return (0, _validateNode[\"default\"])({\n    type: \"ArrayExpression\",\n    elements: elements\n  });\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return (0, _validateNode[\"default\"])({\n    type: \"AssignmentExpression\",\n    operator: operator,\n    left: left,\n    right: right\n  });\n}\n\nfunction binaryExpression(operator, left, right) {\n  return (0, _validateNode[\"default\"])({\n    type: \"BinaryExpression\",\n    operator: operator,\n    left: left,\n    right: right\n  });\n}\n\nfunction interpreterDirective(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"InterpreterDirective\",\n    value: value\n  });\n}\n\nfunction directive(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"Directive\",\n    value: value\n  });\n}\n\nfunction directiveLiteral(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DirectiveLiteral\",\n    value: value\n  });\n}\n\nfunction blockStatement(body) {\n  var directives = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return (0, _validateNode[\"default\"])({\n    type: \"BlockStatement\",\n    body: body,\n    directives: directives\n  });\n}\n\nfunction breakStatement() {\n  var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"BreakStatement\",\n    label: label\n  });\n}\n\nfunction callExpression(callee, _arguments) {\n  return (0, _validateNode[\"default\"])({\n    type: \"CallExpression\",\n    callee: callee,\n    arguments: _arguments\n  });\n}\n\nfunction catchClause() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var body = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"CatchClause\",\n    param: param,\n    body: body\n  });\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ConditionalExpression\",\n    test: test,\n    consequent: consequent,\n    alternate: alternate\n  });\n}\n\nfunction continueStatement() {\n  var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ContinueStatement\",\n    label: label\n  });\n}\n\nfunction debuggerStatement() {\n  return {\n    type: \"DebuggerStatement\"\n  };\n}\n\nfunction doWhileStatement(test, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DoWhileStatement\",\n    test: test,\n    body: body\n  });\n}\n\nfunction emptyStatement() {\n  return {\n    type: \"EmptyStatement\"\n  };\n}\n\nfunction expressionStatement(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ExpressionStatement\",\n    expression: expression\n  });\n}\n\nfunction file(program) {\n  var comments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var tokens = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"File\",\n    program: program,\n    comments: comments,\n    tokens: tokens\n  });\n}\n\nfunction forInStatement(left, right, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ForInStatement\",\n    left: left,\n    right: right,\n    body: body\n  });\n}\n\nfunction forStatement() {\n  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var test = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"ForStatement\",\n    init: init,\n    test: test,\n    update: update,\n    body: body\n  });\n}\n\nfunction functionDeclaration() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var params = arguments.length > 1 ? arguments[1] : undefined;\n  var body = arguments.length > 2 ? arguments[2] : undefined;\n  var generator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var async = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"FunctionDeclaration\",\n    id: id,\n    params: params,\n    body: body,\n    generator: generator,\n    async: async\n  });\n}\n\nfunction functionExpression() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var params = arguments.length > 1 ? arguments[1] : undefined;\n  var body = arguments.length > 2 ? arguments[2] : undefined;\n  var generator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var async = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"FunctionExpression\",\n    id: id,\n    params: params,\n    body: body,\n    generator: generator,\n    async: async\n  });\n}\n\nfunction identifier(name) {\n  return (0, _validateNode[\"default\"])({\n    type: \"Identifier\",\n    name: name\n  });\n}\n\nfunction ifStatement(test, consequent) {\n  var alternate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"IfStatement\",\n    test: test,\n    consequent: consequent,\n    alternate: alternate\n  });\n}\n\nfunction labeledStatement(label, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"LabeledStatement\",\n    label: label,\n    body: body\n  });\n}\n\nfunction stringLiteral(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"StringLiteral\",\n    value: value\n  });\n}\n\nfunction numericLiteral(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"NumericLiteral\",\n    value: value\n  });\n}\n\nfunction nullLiteral() {\n  return {\n    type: \"NullLiteral\"\n  };\n}\n\nfunction booleanLiteral(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"BooleanLiteral\",\n    value: value\n  });\n}\n\nfunction regExpLiteral(pattern) {\n  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return (0, _validateNode[\"default\"])({\n    type: \"RegExpLiteral\",\n    pattern: pattern,\n    flags: flags\n  });\n}\n\nfunction logicalExpression(operator, left, right) {\n  return (0, _validateNode[\"default\"])({\n    type: \"LogicalExpression\",\n    operator: operator,\n    left: left,\n    right: right\n  });\n}\n\nfunction memberExpression(object, property) {\n  var computed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var optional = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"MemberExpression\",\n    object: object,\n    property: property,\n    computed: computed,\n    optional: optional\n  });\n}\n\nfunction newExpression(callee, _arguments) {\n  return (0, _validateNode[\"default\"])({\n    type: \"NewExpression\",\n    callee: callee,\n    arguments: _arguments\n  });\n}\n\nfunction program(body) {\n  var directives = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var sourceType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"script\";\n  var interpreter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"Program\",\n    body: body,\n    directives: directives,\n    sourceType: sourceType,\n    interpreter: interpreter,\n    sourceFile: null\n  });\n}\n\nfunction objectExpression(properties) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectExpression\",\n    properties: properties\n  });\n}\n\nfunction objectMethod() {\n  var kind = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"method\";\n  var key = arguments.length > 1 ? arguments[1] : undefined;\n  var params = arguments.length > 2 ? arguments[2] : undefined;\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  var computed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var generator = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var async = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectMethod\",\n    kind: kind,\n    key: key,\n    params: params,\n    body: body,\n    computed: computed,\n    generator: generator,\n    async: async\n  });\n}\n\nfunction objectProperty(key, value) {\n  var computed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var shorthand = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var decorators = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectProperty\",\n    key: key,\n    value: value,\n    computed: computed,\n    shorthand: shorthand,\n    decorators: decorators\n  });\n}\n\nfunction restElement(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"RestElement\",\n    argument: argument\n  });\n}\n\nfunction returnStatement() {\n  var argument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ReturnStatement\",\n    argument: argument\n  });\n}\n\nfunction sequenceExpression(expressions) {\n  return (0, _validateNode[\"default\"])({\n    type: \"SequenceExpression\",\n    expressions: expressions\n  });\n}\n\nfunction parenthesizedExpression(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ParenthesizedExpression\",\n    expression: expression\n  });\n}\n\nfunction switchCase() {\n  var test = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var consequent = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"SwitchCase\",\n    test: test,\n    consequent: consequent\n  });\n}\n\nfunction switchStatement(discriminant, cases) {\n  return (0, _validateNode[\"default\"])({\n    type: \"SwitchStatement\",\n    discriminant: discriminant,\n    cases: cases\n  });\n}\n\nfunction thisExpression() {\n  return {\n    type: \"ThisExpression\"\n  };\n}\n\nfunction throwStatement(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ThrowStatement\",\n    argument: argument\n  });\n}\n\nfunction tryStatement(block) {\n  var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var finalizer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TryStatement\",\n    block: block,\n    handler: handler,\n    finalizer: finalizer\n  });\n}\n\nfunction unaryExpression(operator, argument) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (0, _validateNode[\"default\"])({\n    type: \"UnaryExpression\",\n    operator: operator,\n    argument: argument,\n    prefix: prefix\n  });\n}\n\nfunction updateExpression(operator, argument) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"UpdateExpression\",\n    operator: operator,\n    argument: argument,\n    prefix: prefix\n  });\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return (0, _validateNode[\"default\"])({\n    type: \"VariableDeclaration\",\n    kind: kind,\n    declarations: declarations\n  });\n}\n\nfunction variableDeclarator(id) {\n  var init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"VariableDeclarator\",\n    id: id,\n    init: init\n  });\n}\n\nfunction whileStatement(test, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"WhileStatement\",\n    test: test,\n    body: body\n  });\n}\n\nfunction withStatement(object, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"WithStatement\",\n    object: object,\n    body: body\n  });\n}\n\nfunction assignmentPattern(left, right) {\n  return (0, _validateNode[\"default\"])({\n    type: \"AssignmentPattern\",\n    left: left,\n    right: right\n  });\n}\n\nfunction arrayPattern(elements) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ArrayPattern\",\n    elements: elements\n  });\n}\n\nfunction arrowFunctionExpression(params, body) {\n  var async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"ArrowFunctionExpression\",\n    params: params,\n    body: body,\n    async: async,\n    expression: null\n  });\n}\n\nfunction classBody(body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassBody\",\n    body: body\n  });\n}\n\nfunction classExpression() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var superClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var body = arguments.length > 2 ? arguments[2] : undefined;\n  var decorators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassExpression\",\n    id: id,\n    superClass: superClass,\n    body: body,\n    decorators: decorators\n  });\n}\n\nfunction classDeclaration(id) {\n  var superClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var body = arguments.length > 2 ? arguments[2] : undefined;\n  var decorators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassDeclaration\",\n    id: id,\n    superClass: superClass,\n    body: body,\n    decorators: decorators\n  });\n}\n\nfunction exportAllDeclaration(source) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ExportAllDeclaration\",\n    source: source\n  });\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ExportDefaultDeclaration\",\n    declaration: declaration\n  });\n}\n\nfunction exportNamedDeclaration() {\n  var declaration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var specifiers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ExportNamedDeclaration\",\n    declaration: declaration,\n    specifiers: specifiers,\n    source: source\n  });\n}\n\nfunction exportSpecifier(local, exported) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ExportSpecifier\",\n    local: local,\n    exported: exported\n  });\n}\n\nfunction forOfStatement(left, right, body) {\n  var _await = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  return (0, _validateNode[\"default\"])({\n    type: \"ForOfStatement\",\n    left: left,\n    right: right,\n    body: body,\n    \"await\": _await\n  });\n}\n\nfunction importDeclaration(specifiers, source) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ImportDeclaration\",\n    specifiers: specifiers,\n    source: source\n  });\n}\n\nfunction importDefaultSpecifier(local) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ImportDefaultSpecifier\",\n    local: local\n  });\n}\n\nfunction importNamespaceSpecifier(local) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ImportNamespaceSpecifier\",\n    local: local\n  });\n}\n\nfunction importSpecifier(local, imported) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ImportSpecifier\",\n    local: local,\n    imported: imported\n  });\n}\n\nfunction metaProperty(meta, property) {\n  return (0, _validateNode[\"default\"])({\n    type: \"MetaProperty\",\n    meta: meta,\n    property: property\n  });\n}\n\nfunction classMethod() {\n  var kind = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"method\";\n  var key = arguments.length > 1 ? arguments[1] : undefined;\n  var params = arguments.length > 2 ? arguments[2] : undefined;\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  var computed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var _static = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  var generator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  var async = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassMethod\",\n    kind: kind,\n    key: key,\n    params: params,\n    body: body,\n    computed: computed,\n    \"static\": _static,\n    generator: generator,\n    async: async\n  });\n}\n\nfunction objectPattern(properties) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectPattern\",\n    properties: properties\n  });\n}\n\nfunction spreadElement(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"SpreadElement\",\n    argument: argument\n  });\n}\n\nfunction _super() {\n  return {\n    type: \"Super\"\n  };\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TaggedTemplateExpression\",\n    tag: tag,\n    quasi: quasi\n  });\n}\n\nfunction templateElement(value) {\n  var tail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"TemplateElement\",\n    value: value,\n    tail: tail\n  });\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TemplateLiteral\",\n    quasis: quasis,\n    expressions: expressions\n  });\n}\n\nfunction yieldExpression() {\n  var argument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var delegate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"YieldExpression\",\n    argument: argument,\n    delegate: delegate\n  });\n}\n\nfunction awaitExpression(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"AwaitExpression\",\n    argument: argument\n  });\n}\n\nfunction _import() {\n  return {\n    type: \"Import\"\n  };\n}\n\nfunction bigIntLiteral(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"BigIntLiteral\",\n    value: value\n  });\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ExportNamespaceSpecifier\",\n    exported: exported\n  });\n}\n\nfunction optionalMemberExpression(object, property) {\n  var computed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var optional = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"OptionalMemberExpression\",\n    object: object,\n    property: property,\n    computed: computed,\n    optional: optional\n  });\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return (0, _validateNode[\"default\"])({\n    type: \"OptionalCallExpression\",\n    callee: callee,\n    arguments: _arguments,\n    optional: optional\n  });\n}\n\nfunction classProperty(key) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var typeAnnotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var decorators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var computed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var _static = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassProperty\",\n    key: key,\n    value: value,\n    typeAnnotation: typeAnnotation,\n    decorators: decorators,\n    computed: computed,\n    \"static\": _static\n  });\n}\n\nfunction classAccessorProperty(key) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var typeAnnotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var decorators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var computed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  var _static = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassAccessorProperty\",\n    key: key,\n    value: value,\n    typeAnnotation: typeAnnotation,\n    decorators: decorators,\n    computed: computed,\n    \"static\": _static\n  });\n}\n\nfunction classPrivateProperty(key) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var decorators = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var _static = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassPrivateProperty\",\n    key: key,\n    value: value,\n    decorators: decorators,\n    \"static\": _static\n  });\n}\n\nfunction classPrivateMethod() {\n  var kind = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"method\";\n  var key = arguments.length > 1 ? arguments[1] : undefined;\n  var params = arguments.length > 2 ? arguments[2] : undefined;\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n\n  var _static = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassPrivateMethod\",\n    kind: kind,\n    key: key,\n    params: params,\n    body: body,\n    \"static\": _static\n  });\n}\n\nfunction privateName(id) {\n  return (0, _validateNode[\"default\"])({\n    type: \"PrivateName\",\n    id: id\n  });\n}\n\nfunction staticBlock(body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"StaticBlock\",\n    body: body\n  });\n}\n\nfunction anyTypeAnnotation() {\n  return {\n    type: \"AnyTypeAnnotation\"\n  };\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ArrayTypeAnnotation\",\n    elementType: elementType\n  });\n}\n\nfunction booleanTypeAnnotation() {\n  return {\n    type: \"BooleanTypeAnnotation\"\n  };\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value: value\n  });\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return {\n    type: \"NullLiteralTypeAnnotation\"\n  };\n}\n\nfunction classImplements(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ClassImplements\",\n    id: id,\n    typeParameters: typeParameters\n  });\n}\n\nfunction declareClass(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var _extends = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareClass\",\n    id: id,\n    typeParameters: typeParameters,\n    \"extends\": _extends,\n    body: body\n  });\n}\n\nfunction declareFunction(id) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareFunction\",\n    id: id\n  });\n}\n\nfunction declareInterface(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var _extends = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareInterface\",\n    id: id,\n    typeParameters: typeParameters,\n    \"extends\": _extends,\n    body: body\n  });\n}\n\nfunction declareModule(id, body) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareModule\",\n    id: id,\n    body: body,\n    kind: kind\n  });\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareModuleExports\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction declareTypeAlias(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var right = arguments.length > 2 ? arguments[2] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareTypeAlias\",\n    id: id,\n    typeParameters: typeParameters,\n    right: right\n  });\n}\n\nfunction declareOpaqueType(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var supertype = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareOpaqueType\",\n    id: id,\n    typeParameters: typeParameters,\n    supertype: supertype\n  });\n}\n\nfunction declareVariable(id) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareVariable\",\n    id: id\n  });\n}\n\nfunction declareExportDeclaration() {\n  var declaration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var specifiers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareExportDeclaration\",\n    declaration: declaration,\n    specifiers: specifiers,\n    source: source\n  });\n}\n\nfunction declareExportAllDeclaration(source) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclareExportAllDeclaration\",\n    source: source\n  });\n}\n\nfunction declaredPredicate(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DeclaredPredicate\",\n    value: value\n  });\n}\n\nfunction existsTypeAnnotation() {\n  return {\n    type: \"ExistsTypeAnnotation\"\n  };\n}\n\nfunction functionTypeAnnotation() {\n  var typeParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var params = arguments.length > 1 ? arguments[1] : undefined;\n  var rest = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var returnType = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters: typeParameters,\n    params: params,\n    rest: rest,\n    returnType: returnType\n  });\n}\n\nfunction functionTypeParam() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var typeAnnotation = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"FunctionTypeParam\",\n    name: name,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction genericTypeAnnotation(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"GenericTypeAnnotation\",\n    id: id,\n    typeParameters: typeParameters\n  });\n}\n\nfunction inferredPredicate() {\n  return {\n    type: \"InferredPredicate\"\n  };\n}\n\nfunction interfaceExtends(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"InterfaceExtends\",\n    id: id,\n    typeParameters: typeParameters\n  });\n}\n\nfunction interfaceDeclaration(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var _extends = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"InterfaceDeclaration\",\n    id: id,\n    typeParameters: typeParameters,\n    \"extends\": _extends,\n    body: body\n  });\n}\n\nfunction interfaceTypeAnnotation() {\n  var _extends = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var body = arguments.length > 1 ? arguments[1] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"InterfaceTypeAnnotation\",\n    \"extends\": _extends,\n    body: body\n  });\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return (0, _validateNode[\"default\"])({\n    type: \"IntersectionTypeAnnotation\",\n    types: types\n  });\n}\n\nfunction mixedTypeAnnotation() {\n  return {\n    type: \"MixedTypeAnnotation\"\n  };\n}\n\nfunction emptyTypeAnnotation() {\n  return {\n    type: \"EmptyTypeAnnotation\"\n  };\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"NumberLiteralTypeAnnotation\",\n    value: value\n  });\n}\n\nfunction numberTypeAnnotation() {\n  return {\n    type: \"NumberTypeAnnotation\"\n  };\n}\n\nfunction objectTypeAnnotation(properties) {\n  var indexers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callProperties = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var internalSlots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var exact = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectTypeAnnotation\",\n    properties: properties,\n    indexers: indexers,\n    callProperties: callProperties,\n    internalSlots: internalSlots,\n    exact: exact\n  });\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectTypeInternalSlot\",\n    id: id,\n    value: value,\n    optional: optional,\n    \"static\": _static,\n    method: method\n  });\n}\n\nfunction objectTypeCallProperty(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectTypeCallProperty\",\n    value: value,\n    \"static\": null\n  });\n}\n\nfunction objectTypeIndexer() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var key = arguments.length > 1 ? arguments[1] : undefined;\n  var value = arguments.length > 2 ? arguments[2] : undefined;\n  var variance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectTypeIndexer\",\n    id: id,\n    key: key,\n    value: value,\n    variance: variance,\n    \"static\": null\n  });\n}\n\nfunction objectTypeProperty(key, value) {\n  var variance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectTypeProperty\",\n    key: key,\n    value: value,\n    variance: variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    \"static\": null\n  });\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ObjectTypeSpreadProperty\",\n    argument: argument\n  });\n}\n\nfunction opaqueType(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var supertype = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var impltype = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"OpaqueType\",\n    id: id,\n    typeParameters: typeParameters,\n    supertype: supertype,\n    impltype: impltype\n  });\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return (0, _validateNode[\"default\"])({\n    type: \"QualifiedTypeIdentifier\",\n    id: id,\n    qualification: qualification\n  });\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"StringLiteralTypeAnnotation\",\n    value: value\n  });\n}\n\nfunction stringTypeAnnotation() {\n  return {\n    type: \"StringTypeAnnotation\"\n  };\n}\n\nfunction symbolTypeAnnotation() {\n  return {\n    type: \"SymbolTypeAnnotation\"\n  };\n}\n\nfunction thisTypeAnnotation() {\n  return {\n    type: \"ThisTypeAnnotation\"\n  };\n}\n\nfunction tupleTypeAnnotation(types) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TupleTypeAnnotation\",\n    types: types\n  });\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeofTypeAnnotation\",\n    argument: argument\n  });\n}\n\nfunction typeAlias(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var right = arguments.length > 2 ? arguments[2] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeAlias\",\n    id: id,\n    typeParameters: typeParameters,\n    right: right\n  });\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeAnnotation\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeCastExpression\",\n    expression: expression,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction typeParameter() {\n  var bound = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _default = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var variance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeParameter\",\n    bound: bound,\n    \"default\": _default,\n    variance: variance,\n    name: null\n  });\n}\n\nfunction typeParameterDeclaration(params) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeParameterDeclaration\",\n    params: params\n  });\n}\n\nfunction typeParameterInstantiation(params) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TypeParameterInstantiation\",\n    params: params\n  });\n}\n\nfunction unionTypeAnnotation(types) {\n  return (0, _validateNode[\"default\"])({\n    type: \"UnionTypeAnnotation\",\n    types: types\n  });\n}\n\nfunction variance(kind) {\n  return (0, _validateNode[\"default\"])({\n    type: \"Variance\",\n    kind: kind\n  });\n}\n\nfunction voidTypeAnnotation() {\n  return {\n    type: \"VoidTypeAnnotation\"\n  };\n}\n\nfunction enumDeclaration(id, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumDeclaration\",\n    id: id,\n    body: body\n  });\n}\n\nfunction enumBooleanBody(members) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumBooleanBody\",\n    members: members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumNumberBody(members) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumNumberBody\",\n    members: members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumStringBody(members) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumStringBody\",\n    members: members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumSymbolBody(members) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumSymbolBody\",\n    members: members,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumBooleanMember(id) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumBooleanMember\",\n    id: id,\n    init: null\n  });\n}\n\nfunction enumNumberMember(id, init) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumNumberMember\",\n    id: id,\n    init: init\n  });\n}\n\nfunction enumStringMember(id, init) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumStringMember\",\n    id: id,\n    init: init\n  });\n}\n\nfunction enumDefaultedMember(id) {\n  return (0, _validateNode[\"default\"])({\n    type: \"EnumDefaultedMember\",\n    id: id\n  });\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return (0, _validateNode[\"default\"])({\n    type: \"IndexedAccessType\",\n    objectType: objectType,\n    indexType: indexType\n  });\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode[\"default\"])({\n    type: \"OptionalIndexedAccessType\",\n    objectType: objectType,\n    indexType: indexType,\n    optional: null\n  });\n}\n\nfunction jsxAttribute(name) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXAttribute\",\n    name: name,\n    value: value\n  });\n}\n\nfunction jsxClosingElement(name) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXClosingElement\",\n    name: name\n  });\n}\n\nfunction jsxElement(openingElement) {\n  var closingElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var children = arguments.length > 2 ? arguments[2] : undefined;\n  var selfClosing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXElement\",\n    openingElement: openingElement,\n    closingElement: closingElement,\n    children: children,\n    selfClosing: selfClosing\n  });\n}\n\nfunction jsxEmptyExpression() {\n  return {\n    type: \"JSXEmptyExpression\"\n  };\n}\n\nfunction jsxExpressionContainer(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXExpressionContainer\",\n    expression: expression\n  });\n}\n\nfunction jsxSpreadChild(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXSpreadChild\",\n    expression: expression\n  });\n}\n\nfunction jsxIdentifier(name) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXIdentifier\",\n    name: name\n  });\n}\n\nfunction jsxMemberExpression(object, property) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXMemberExpression\",\n    object: object,\n    property: property\n  });\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXNamespacedName\",\n    namespace: namespace,\n    name: name\n  });\n}\n\nfunction jsxOpeningElement(name, attributes) {\n  var selfClosing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXOpeningElement\",\n    name: name,\n    attributes: attributes,\n    selfClosing: selfClosing\n  });\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXSpreadAttribute\",\n    argument: argument\n  });\n}\n\nfunction jsxText(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXText\",\n    value: value\n  });\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return (0, _validateNode[\"default\"])({\n    type: \"JSXFragment\",\n    openingFragment: openingFragment,\n    closingFragment: closingFragment,\n    children: children\n  });\n}\n\nfunction jsxOpeningFragment() {\n  return {\n    type: \"JSXOpeningFragment\"\n  };\n}\n\nfunction jsxClosingFragment() {\n  return {\n    type: \"JSXClosingFragment\"\n  };\n}\n\nfunction noop() {\n  return {\n    type: \"Noop\"\n  };\n}\n\nfunction placeholder(expectedNode, name) {\n  return (0, _validateNode[\"default\"])({\n    type: \"Placeholder\",\n    expectedNode: expectedNode,\n    name: name\n  });\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return (0, _validateNode[\"default\"])({\n    type: \"V8IntrinsicIdentifier\",\n    name: name\n  });\n}\n\nfunction argumentPlaceholder() {\n  return {\n    type: \"ArgumentPlaceholder\"\n  };\n}\n\nfunction bindExpression(object, callee) {\n  return (0, _validateNode[\"default\"])({\n    type: \"BindExpression\",\n    object: object,\n    callee: callee\n  });\n}\n\nfunction importAttribute(key, value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ImportAttribute\",\n    key: key,\n    value: value\n  });\n}\n\nfunction decorator(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"Decorator\",\n    expression: expression\n  });\n}\n\nfunction doExpression(body) {\n  var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"DoExpression\",\n    body: body,\n    async: async\n  });\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ExportDefaultSpecifier\",\n    exported: exported\n  });\n}\n\nfunction recordExpression(properties) {\n  return (0, _validateNode[\"default\"])({\n    type: \"RecordExpression\",\n    properties: properties\n  });\n}\n\nfunction tupleExpression() {\n  var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return (0, _validateNode[\"default\"])({\n    type: \"TupleExpression\",\n    elements: elements\n  });\n}\n\nfunction decimalLiteral(value) {\n  return (0, _validateNode[\"default\"])({\n    type: \"DecimalLiteral\",\n    value: value\n  });\n}\n\nfunction moduleExpression(body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"ModuleExpression\",\n    body: body\n  });\n}\n\nfunction topicReference() {\n  return {\n    type: \"TopicReference\"\n  };\n}\n\nfunction pipelineTopicExpression(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"PipelineTopicExpression\",\n    expression: expression\n  });\n}\n\nfunction pipelineBareFunction(callee) {\n  return (0, _validateNode[\"default\"])({\n    type: \"PipelineBareFunction\",\n    callee: callee\n  });\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return {\n    type: \"PipelinePrimaryTopicReference\"\n  };\n}\n\nfunction tsParameterProperty(parameter) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSParameterProperty\",\n    parameter: parameter\n  });\n}\n\nfunction tsDeclareFunction() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var params = arguments.length > 2 ? arguments[2] : undefined;\n  var returnType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSDeclareFunction\",\n    id: id,\n    typeParameters: typeParameters,\n    params: params,\n    returnType: returnType\n  });\n}\n\nfunction tsDeclareMethod() {\n  var decorators = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var key = arguments.length > 1 ? arguments[1] : undefined;\n  var typeParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var params = arguments.length > 3 ? arguments[3] : undefined;\n  var returnType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSDeclareMethod\",\n    decorators: decorators,\n    key: key,\n    typeParameters: typeParameters,\n    params: params,\n    returnType: returnType\n  });\n}\n\nfunction tsQualifiedName(left, right) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSQualifiedName\",\n    left: left,\n    right: right\n  });\n}\n\nfunction tsCallSignatureDeclaration() {\n  var typeParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var parameters = arguments.length > 1 ? arguments[1] : undefined;\n  var typeAnnotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters: typeParameters,\n    parameters: parameters,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsConstructSignatureDeclaration() {\n  var typeParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var parameters = arguments.length > 1 ? arguments[1] : undefined;\n  var typeAnnotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters: typeParameters,\n    parameters: parameters,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsPropertySignature(key) {\n  var typeAnnotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var initializer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSPropertySignature\",\n    key: key,\n    typeAnnotation: typeAnnotation,\n    initializer: initializer,\n    kind: null\n  });\n}\n\nfunction tsMethodSignature(key) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var parameters = arguments.length > 2 ? arguments[2] : undefined;\n  var typeAnnotation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSMethodSignature\",\n    key: key,\n    typeParameters: typeParameters,\n    parameters: parameters,\n    typeAnnotation: typeAnnotation,\n    kind: null\n  });\n}\n\nfunction tsIndexSignature(parameters) {\n  var typeAnnotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSIndexSignature\",\n    parameters: parameters,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsAnyKeyword() {\n  return {\n    type: \"TSAnyKeyword\"\n  };\n}\n\nfunction tsBooleanKeyword() {\n  return {\n    type: \"TSBooleanKeyword\"\n  };\n}\n\nfunction tsBigIntKeyword() {\n  return {\n    type: \"TSBigIntKeyword\"\n  };\n}\n\nfunction tsIntrinsicKeyword() {\n  return {\n    type: \"TSIntrinsicKeyword\"\n  };\n}\n\nfunction tsNeverKeyword() {\n  return {\n    type: \"TSNeverKeyword\"\n  };\n}\n\nfunction tsNullKeyword() {\n  return {\n    type: \"TSNullKeyword\"\n  };\n}\n\nfunction tsNumberKeyword() {\n  return {\n    type: \"TSNumberKeyword\"\n  };\n}\n\nfunction tsObjectKeyword() {\n  return {\n    type: \"TSObjectKeyword\"\n  };\n}\n\nfunction tsStringKeyword() {\n  return {\n    type: \"TSStringKeyword\"\n  };\n}\n\nfunction tsSymbolKeyword() {\n  return {\n    type: \"TSSymbolKeyword\"\n  };\n}\n\nfunction tsUndefinedKeyword() {\n  return {\n    type: \"TSUndefinedKeyword\"\n  };\n}\n\nfunction tsUnknownKeyword() {\n  return {\n    type: \"TSUnknownKeyword\"\n  };\n}\n\nfunction tsVoidKeyword() {\n  return {\n    type: \"TSVoidKeyword\"\n  };\n}\n\nfunction tsThisType() {\n  return {\n    type: \"TSThisType\"\n  };\n}\n\nfunction tsFunctionType() {\n  var typeParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var parameters = arguments.length > 1 ? arguments[1] : undefined;\n  var typeAnnotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSFunctionType\",\n    typeParameters: typeParameters,\n    parameters: parameters,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsConstructorType() {\n  var typeParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var parameters = arguments.length > 1 ? arguments[1] : undefined;\n  var typeAnnotation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSConstructorType\",\n    typeParameters: typeParameters,\n    parameters: parameters,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsTypeReference(typeName) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeReference\",\n    typeName: typeName,\n    typeParameters: typeParameters\n  });\n}\n\nfunction tsTypePredicate(parameterName) {\n  var typeAnnotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var asserts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypePredicate\",\n    parameterName: parameterName,\n    typeAnnotation: typeAnnotation,\n    asserts: asserts\n  });\n}\n\nfunction tsTypeQuery(exprName) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeQuery\",\n    exprName: exprName,\n    typeParameters: typeParameters\n  });\n}\n\nfunction tsTypeLiteral(members) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeLiteral\",\n    members: members\n  });\n}\n\nfunction tsArrayType(elementType) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSArrayType\",\n    elementType: elementType\n  });\n}\n\nfunction tsTupleType(elementTypes) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTupleType\",\n    elementTypes: elementTypes\n  });\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSOptionalType\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsRestType(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSRestType\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsNamedTupleMember(label, elementType) {\n  var optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSNamedTupleMember\",\n    label: label,\n    elementType: elementType,\n    optional: optional\n  });\n}\n\nfunction tsUnionType(types) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSUnionType\",\n    types: types\n  });\n}\n\nfunction tsIntersectionType(types) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSIntersectionType\",\n    types: types\n  });\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSConditionalType\",\n    checkType: checkType,\n    extendsType: extendsType,\n    trueType: trueType,\n    falseType: falseType\n  });\n}\n\nfunction tsInferType(typeParameter) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSInferType\",\n    typeParameter: typeParameter\n  });\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSParenthesizedType\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeOperator\",\n    typeAnnotation: typeAnnotation,\n    operator: null\n  });\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSIndexedAccessType\",\n    objectType: objectType,\n    indexType: indexType\n  });\n}\n\nfunction tsMappedType(typeParameter) {\n  var typeAnnotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var nameType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSMappedType\",\n    typeParameter: typeParameter,\n    typeAnnotation: typeAnnotation,\n    nameType: nameType\n  });\n}\n\nfunction tsLiteralType(literal) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSLiteralType\",\n    literal: literal\n  });\n}\n\nfunction tsExpressionWithTypeArguments(expression) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSExpressionWithTypeArguments\",\n    expression: expression,\n    typeParameters: typeParameters\n  });\n}\n\nfunction tsInterfaceDeclaration(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var _extends = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var body = arguments.length > 3 ? arguments[3] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSInterfaceDeclaration\",\n    id: id,\n    typeParameters: typeParameters,\n    \"extends\": _extends,\n    body: body\n  });\n}\n\nfunction tsInterfaceBody(body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSInterfaceBody\",\n    body: body\n  });\n}\n\nfunction tsTypeAliasDeclaration(id) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var typeAnnotation = arguments.length > 2 ? arguments[2] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeAliasDeclaration\",\n    id: id,\n    typeParameters: typeParameters,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsInstantiationExpression(expression) {\n  var typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSInstantiationExpression\",\n    expression: expression,\n    typeParameters: typeParameters\n  });\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSAsExpression\",\n    expression: expression,\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeAssertion\",\n    typeAnnotation: typeAnnotation,\n    expression: expression\n  });\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSEnumDeclaration\",\n    id: id,\n    members: members\n  });\n}\n\nfunction tsEnumMember(id) {\n  var initializer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSEnumMember\",\n    id: id,\n    initializer: initializer\n  });\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSModuleDeclaration\",\n    id: id,\n    body: body\n  });\n}\n\nfunction tsModuleBlock(body) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSModuleBlock\",\n    body: body\n  });\n}\n\nfunction tsImportType(argument) {\n  var qualifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var typeParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSImportType\",\n    argument: argument,\n    qualifier: qualifier,\n    typeParameters: typeParameters\n  });\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSImportEqualsDeclaration\",\n    id: id,\n    moduleReference: moduleReference,\n    isExport: null\n  });\n}\n\nfunction tsExternalModuleReference(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSExternalModuleReference\",\n    expression: expression\n  });\n}\n\nfunction tsNonNullExpression(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSNonNullExpression\",\n    expression: expression\n  });\n}\n\nfunction tsExportAssignment(expression) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSExportAssignment\",\n    expression: expression\n  });\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSNamespaceExportDeclaration\",\n    id: id\n  });\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation: typeAnnotation\n  });\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeParameterInstantiation\",\n    params: params\n  });\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeParameterDeclaration\",\n    params: params\n  });\n}\n\nfunction tsTypeParameter() {\n  var constraint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _default = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var name = arguments.length > 2 ? arguments[2] : undefined;\n  return (0, _validateNode[\"default\"])({\n    type: \"TSTypeParameter\",\n    constraint: constraint,\n    \"default\": _default,\n    name: name\n  });\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return numericLiteral(value);\n}\n\nfunction RegexLiteral(pattern) {\n  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return regExpLiteral(pattern, flags);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return restElement(argument);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return spreadElement(argument);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","anyTypeAnnotation","argumentPlaceholder","arrayExpression","arrayPattern","arrayTypeAnnotation","arrowFunctionExpression","assignmentExpression","assignmentPattern","awaitExpression","bigIntLiteral","binaryExpression","bindExpression","blockStatement","booleanLiteral","booleanLiteralTypeAnnotation","booleanTypeAnnotation","breakStatement","callExpression","catchClause","classAccessorProperty","classBody","classDeclaration","classExpression","classImplements","classMethod","classPrivateMethod","classPrivateProperty","classProperty","conditionalExpression","continueStatement","debuggerStatement","decimalLiteral","declareClass","declareExportAllDeclaration","declareExportDeclaration","declareFunction","declareInterface","declareModule","declareModuleExports","declareOpaqueType","declareTypeAlias","declareVariable","declaredPredicate","decorator","directive","directiveLiteral","doExpression","doWhileStatement","emptyStatement","emptyTypeAnnotation","enumBooleanBody","enumBooleanMember","enumDeclaration","enumDefaultedMember","enumNumberBody","enumNumberMember","enumStringBody","enumStringMember","enumSymbolBody","existsTypeAnnotation","exportAllDeclaration","exportDefaultDeclaration","exportDefaultSpecifier","exportNamedDeclaration","exportNamespaceSpecifier","exportSpecifier","expressionStatement","file","forInStatement","forOfStatement","forStatement","functionDeclaration","functionExpression","functionTypeAnnotation","functionTypeParam","genericTypeAnnotation","identifier","ifStatement","_import","importAttribute","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","indexedAccessType","inferredPredicate","interfaceDeclaration","interfaceExtends","interfaceTypeAnnotation","interpreterDirective","intersectionTypeAnnotation","jSXAttribute","jsxAttribute","jSXClosingElement","jsxClosingElement","jSXClosingFragment","jsxClosingFragment","jSXElement","jsxElement","jSXEmptyExpression","jsxEmptyExpression","jSXExpressionContainer","jsxExpressionContainer","jSXFragment","jsxFragment","jSXIdentifier","jsxIdentifier","jSXMemberExpression","jsxMemberExpression","jSXNamespacedName","jsxNamespacedName","jSXOpeningElement","jsxOpeningElement","jSXOpeningFragment","jsxOpeningFragment","jSXSpreadAttribute","jsxSpreadAttribute","jSXSpreadChild","jsxSpreadChild","jSXText","jsxText","labeledStatement","logicalExpression","memberExpression","metaProperty","mixedTypeAnnotation","moduleExpression","newExpression","noop","nullLiteral","nullLiteralTypeAnnotation","nullableTypeAnnotation","numberLiteral","NumberLiteral","numberLiteralTypeAnnotation","numberTypeAnnotation","numericLiteral","objectExpression","objectMethod","objectPattern","objectProperty","objectTypeAnnotation","objectTypeCallProperty","objectTypeIndexer","objectTypeInternalSlot","objectTypeProperty","objectTypeSpreadProperty","opaqueType","optionalCallExpression","optionalIndexedAccessType","optionalMemberExpression","parenthesizedExpression","pipelineBareFunction","pipelinePrimaryTopicReference","pipelineTopicExpression","placeholder","privateName","program","qualifiedTypeIdentifier","recordExpression","regExpLiteral","regexLiteral","RegexLiteral","restElement","restProperty","RestProperty","returnStatement","sequenceExpression","spreadElement","spreadProperty","SpreadProperty","staticBlock","stringLiteral","stringLiteralTypeAnnotation","stringTypeAnnotation","_super","switchCase","switchStatement","symbolTypeAnnotation","taggedTemplateExpression","templateElement","templateLiteral","thisExpression","thisTypeAnnotation","throwStatement","topicReference","tryStatement","tSAnyKeyword","tsAnyKeyword","tSArrayType","tsArrayType","tSAsExpression","tsAsExpression","tSBigIntKeyword","tsBigIntKeyword","tSBooleanKeyword","tsBooleanKeyword","tSCallSignatureDeclaration","tsCallSignatureDeclaration","tSConditionalType","tsConditionalType","tSConstructSignatureDeclaration","tsConstructSignatureDeclaration","tSConstructorType","tsConstructorType","tSDeclareFunction","tsDeclareFunction","tSDeclareMethod","tsDeclareMethod","tSEnumDeclaration","tsEnumDeclaration","tSEnumMember","tsEnumMember","tSExportAssignment","tsExportAssignment","tSExpressionWithTypeArguments","tsExpressionWithTypeArguments","tSExternalModuleReference","tsExternalModuleReference","tSFunctionType","tsFunctionType","tSImportEqualsDeclaration","tsImportEqualsDeclaration","tSImportType","tsImportType","tSIndexSignature","tsIndexSignature","tSIndexedAccessType","tsIndexedAccessType","tSInferType","tsInferType","tSInstantiationExpression","tsInstantiationExpression","tSInterfaceBody","tsInterfaceBody","tSInterfaceDeclaration","tsInterfaceDeclaration","tSIntersectionType","tsIntersectionType","tSIntrinsicKeyword","tsIntrinsicKeyword","tSLiteralType","tsLiteralType","tSMappedType","tsMappedType","tSMethodSignature","tsMethodSignature","tSModuleBlock","tsModuleBlock","tSModuleDeclaration","tsModuleDeclaration","tSNamedTupleMember","tsNamedTupleMember","tSNamespaceExportDeclaration","tsNamespaceExportDeclaration","tSNeverKeyword","tsNeverKeyword","tSNonNullExpression","tsNonNullExpression","tSNullKeyword","tsNullKeyword","tSNumberKeyword","tsNumberKeyword","tSObjectKeyword","tsObjectKeyword","tSOptionalType","tsOptionalType","tSParameterProperty","tsParameterProperty","tSParenthesizedType","tsParenthesizedType","tSPropertySignature","tsPropertySignature","tSQualifiedName","tsQualifiedName","tSRestType","tsRestType","tSStringKeyword","tsStringKeyword","tSSymbolKeyword","tsSymbolKeyword","tSThisType","tsThisType","tSTupleType","tsTupleType","tSTypeAliasDeclaration","tsTypeAliasDeclaration","tSTypeAnnotation","tsTypeAnnotation","tSTypeAssertion","tsTypeAssertion","tSTypeLiteral","tsTypeLiteral","tSTypeOperator","tsTypeOperator","tSTypeParameter","tsTypeParameter","tSTypeParameterDeclaration","tsTypeParameterDeclaration","tSTypeParameterInstantiation","tsTypeParameterInstantiation","tSTypePredicate","tsTypePredicate","tSTypeQuery","tsTypeQuery","tSTypeReference","tsTypeReference","tSUndefinedKeyword","tsUndefinedKeyword","tSUnionType","tsUnionType","tSUnknownKeyword","tsUnknownKeyword","tSVoidKeyword","tsVoidKeyword","tupleExpression","tupleTypeAnnotation","typeAlias","typeAnnotation","typeCastExpression","typeParameter","typeParameterDeclaration","typeParameterInstantiation","typeofTypeAnnotation","unaryExpression","unionTypeAnnotation","updateExpression","v8IntrinsicIdentifier","variableDeclaration","variableDeclarator","variance","voidTypeAnnotation","whileStatement","withStatement","yieldExpression","_validateNode","require","elements","type","operator","left","right","body","directives","label","callee","_arguments","arguments","param","test","consequent","alternate","expression","comments","tokens","init","update","id","params","generator","async","name","pattern","flags","object","property","computed","optional","sourceType","interpreter","sourceFile","properties","kind","key","shorthand","decorators","argument","expressions","discriminant","cases","block","handler","finalizer","prefix","declarations","superClass","source","declaration","specifiers","local","exported","_await","imported","meta","_static","tag","quasi","tail","quasis","delegate","elementType","typeParameters","_extends","supertype","rest","returnType","types","indexers","callProperties","internalSlots","exact","method","proto","impltype","qualification","bound","_default","members","explicitType","hasUnknownMembers","objectType","indexType","openingElement","closingElement","children","selfClosing","namespace","attributes","openingFragment","closingFragment","expectedNode","parameter","parameters","initializer","typeName","parameterName","asserts","exprName","elementTypes","checkType","extendsType","trueType","falseType","nameType","literal","qualifier","moduleReference","isExport","constraint","console","trace"],"sources":["/home/orange/Desktop/project-catalog-antd/node_modules/@babel/types/lib/builders/generated/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports.import = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports.super = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInstantiationExpression = exports.tsInstantiationExpression = tsInstantiationExpression;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _validateNode = require(\"../validateNode\");\n\nfunction arrayExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"ArrayExpression\",\n    elements\n  });\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction binaryExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction interpreterDirective(value) {\n  return (0, _validateNode.default)({\n    type: \"InterpreterDirective\",\n    value\n  });\n}\n\nfunction directive(value) {\n  return (0, _validateNode.default)({\n    type: \"Directive\",\n    value\n  });\n}\n\nfunction directiveLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DirectiveLiteral\",\n    value\n  });\n}\n\nfunction blockStatement(body, directives = []) {\n  return (0, _validateNode.default)({\n    type: \"BlockStatement\",\n    body,\n    directives\n  });\n}\n\nfunction breakStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"BreakStatement\",\n    label\n  });\n}\n\nfunction callExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction catchClause(param = null, body) {\n  return (0, _validateNode.default)({\n    type: \"CatchClause\",\n    param,\n    body\n  });\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return (0, _validateNode.default)({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction continueStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"ContinueStatement\",\n    label\n  });\n}\n\nfunction debuggerStatement() {\n  return {\n    type: \"DebuggerStatement\"\n  };\n}\n\nfunction doWhileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"DoWhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction emptyStatement() {\n  return {\n    type: \"EmptyStatement\"\n  };\n}\n\nfunction expressionStatement(expression) {\n  return (0, _validateNode.default)({\n    type: \"ExpressionStatement\",\n    expression\n  });\n}\n\nfunction file(program, comments = null, tokens = null) {\n  return (0, _validateNode.default)({\n    type: \"File\",\n    program,\n    comments,\n    tokens\n  });\n}\n\nfunction forInStatement(left, right, body) {\n  return (0, _validateNode.default)({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body\n  });\n}\n\nfunction forStatement(init = null, test = null, update = null, body) {\n  return (0, _validateNode.default)({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body\n  });\n}\n\nfunction functionDeclaration(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction functionExpression(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction identifier(name) {\n  return (0, _validateNode.default)({\n    type: \"Identifier\",\n    name\n  });\n}\n\nfunction ifStatement(test, consequent, alternate = null) {\n  return (0, _validateNode.default)({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction labeledStatement(label, body) {\n  return (0, _validateNode.default)({\n    type: \"LabeledStatement\",\n    label,\n    body\n  });\n}\n\nfunction stringLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteral\",\n    value\n  });\n}\n\nfunction numericLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"NumericLiteral\",\n    value\n  });\n}\n\nfunction nullLiteral() {\n  return {\n    type: \"NullLiteral\"\n  };\n}\n\nfunction booleanLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteral\",\n    value\n  });\n}\n\nfunction regExpLiteral(pattern, flags = \"\") {\n  return (0, _validateNode.default)({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags\n  });\n}\n\nfunction logicalExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction memberExpression(object, property, computed = false, optional = null) {\n  return (0, _validateNode.default)({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction newExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction program(body, directives = [], sourceType = \"script\", interpreter = null) {\n  return (0, _validateNode.default)({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n    sourceFile: null\n  });\n}\n\nfunction objectExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectExpression\",\n    properties\n  });\n}\n\nfunction objectMethod(kind = \"method\", key, params, body, computed = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async\n  });\n}\n\nfunction objectProperty(key, value, computed = false, shorthand = false, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators\n  });\n}\n\nfunction restElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"RestElement\",\n    argument\n  });\n}\n\nfunction returnStatement(argument = null) {\n  return (0, _validateNode.default)({\n    type: \"ReturnStatement\",\n    argument\n  });\n}\n\nfunction sequenceExpression(expressions) {\n  return (0, _validateNode.default)({\n    type: \"SequenceExpression\",\n    expressions\n  });\n}\n\nfunction parenthesizedExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"ParenthesizedExpression\",\n    expression\n  });\n}\n\nfunction switchCase(test = null, consequent) {\n  return (0, _validateNode.default)({\n    type: \"SwitchCase\",\n    test,\n    consequent\n  });\n}\n\nfunction switchStatement(discriminant, cases) {\n  return (0, _validateNode.default)({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases\n  });\n}\n\nfunction thisExpression() {\n  return {\n    type: \"ThisExpression\"\n  };\n}\n\nfunction throwStatement(argument) {\n  return (0, _validateNode.default)({\n    type: \"ThrowStatement\",\n    argument\n  });\n}\n\nfunction tryStatement(block, handler = null, finalizer = null) {\n  return (0, _validateNode.default)({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer\n  });\n}\n\nfunction unaryExpression(operator, argument, prefix = true) {\n  return (0, _validateNode.default)({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction updateExpression(operator, argument, prefix = false) {\n  return (0, _validateNode.default)({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations\n  });\n}\n\nfunction variableDeclarator(id, init = null) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclarator\",\n    id,\n    init\n  });\n}\n\nfunction whileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"WhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction withStatement(object, body) {\n  return (0, _validateNode.default)({\n    type: \"WithStatement\",\n    object,\n    body\n  });\n}\n\nfunction assignmentPattern(left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentPattern\",\n    left,\n    right\n  });\n}\n\nfunction arrayPattern(elements) {\n  return (0, _validateNode.default)({\n    type: \"ArrayPattern\",\n    elements\n  });\n}\n\nfunction arrowFunctionExpression(params, body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null\n  });\n}\n\nfunction classBody(body) {\n  return (0, _validateNode.default)({\n    type: \"ClassBody\",\n    body\n  });\n}\n\nfunction classExpression(id = null, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction classDeclaration(id, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction exportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"ExportAllDeclaration\",\n    source\n  });\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultDeclaration\",\n    declaration\n  });\n}\n\nfunction exportNamedDeclaration(declaration = null, specifiers = [], source = null) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction exportSpecifier(local, exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportSpecifier\",\n    local,\n    exported\n  });\n}\n\nfunction forOfStatement(left, right, body, _await = false) {\n  return (0, _validateNode.default)({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await\n  });\n}\n\nfunction importDeclaration(specifiers, source) {\n  return (0, _validateNode.default)({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source\n  });\n}\n\nfunction importDefaultSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportDefaultSpecifier\",\n    local\n  });\n}\n\nfunction importNamespaceSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportNamespaceSpecifier\",\n    local\n  });\n}\n\nfunction importSpecifier(local, imported) {\n  return (0, _validateNode.default)({\n    type: \"ImportSpecifier\",\n    local,\n    imported\n  });\n}\n\nfunction metaProperty(meta, property) {\n  return (0, _validateNode.default)({\n    type: \"MetaProperty\",\n    meta,\n    property\n  });\n}\n\nfunction classMethod(kind = \"method\", key, params, body, computed = false, _static = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async\n  });\n}\n\nfunction objectPattern(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectPattern\",\n    properties\n  });\n}\n\nfunction spreadElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"SpreadElement\",\n    argument\n  });\n}\n\nfunction _super() {\n  return {\n    type: \"Super\"\n  };\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return (0, _validateNode.default)({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi\n  });\n}\n\nfunction templateElement(value, tail = false) {\n  return (0, _validateNode.default)({\n    type: \"TemplateElement\",\n    value,\n    tail\n  });\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return (0, _validateNode.default)({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions\n  });\n}\n\nfunction yieldExpression(argument = null, delegate = false) {\n  return (0, _validateNode.default)({\n    type: \"YieldExpression\",\n    argument,\n    delegate\n  });\n}\n\nfunction awaitExpression(argument) {\n  return (0, _validateNode.default)({\n    type: \"AwaitExpression\",\n    argument\n  });\n}\n\nfunction _import() {\n  return {\n    type: \"Import\"\n  };\n}\n\nfunction bigIntLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BigIntLiteral\",\n    value\n  });\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamespaceSpecifier\",\n    exported\n  });\n}\n\nfunction optionalMemberExpression(object, property, computed = false, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional\n  });\n}\n\nfunction classProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classAccessorProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classPrivateProperty(key, value = null, decorators = null, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static\n  });\n}\n\nfunction classPrivateMethod(kind = \"method\", key, params, body, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static\n  });\n}\n\nfunction privateName(id) {\n  return (0, _validateNode.default)({\n    type: \"PrivateName\",\n    id\n  });\n}\n\nfunction staticBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"StaticBlock\",\n    body\n  });\n}\n\nfunction anyTypeAnnotation() {\n  return {\n    type: \"AnyTypeAnnotation\"\n  };\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return (0, _validateNode.default)({\n    type: \"ArrayTypeAnnotation\",\n    elementType\n  });\n}\n\nfunction booleanTypeAnnotation() {\n  return {\n    type: \"BooleanTypeAnnotation\"\n  };\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return {\n    type: \"NullLiteralTypeAnnotation\"\n  };\n}\n\nfunction classImplements(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassImplements\",\n    id,\n    typeParameters\n  });\n}\n\nfunction declareClass(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareFunction(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareFunction\",\n    id\n  });\n}\n\nfunction declareInterface(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareModule(id, body, kind = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind\n  });\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModuleExports\",\n    typeAnnotation\n  });\n}\n\nfunction declareTypeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction declareOpaqueType(id, typeParameters = null, supertype = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype\n  });\n}\n\nfunction declareVariable(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareVariable\",\n    id\n  });\n}\n\nfunction declareExportDeclaration(declaration = null, specifiers = null, source = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction declareExportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportAllDeclaration\",\n    source\n  });\n}\n\nfunction declaredPredicate(value) {\n  return (0, _validateNode.default)({\n    type: \"DeclaredPredicate\",\n    value\n  });\n}\n\nfunction existsTypeAnnotation() {\n  return {\n    type: \"ExistsTypeAnnotation\"\n  };\n}\n\nfunction functionTypeAnnotation(typeParameters = null, params, rest = null, returnType) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType\n  });\n}\n\nfunction functionTypeParam(name = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation\n  });\n}\n\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters\n  });\n}\n\nfunction inferredPredicate() {\n  return {\n    type: \"InferredPredicate\"\n  };\n}\n\nfunction interfaceExtends(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters\n  });\n}\n\nfunction interfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction interfaceTypeAnnotation(_extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body\n  });\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"IntersectionTypeAnnotation\",\n    types\n  });\n}\n\nfunction mixedTypeAnnotation() {\n  return {\n    type: \"MixedTypeAnnotation\"\n  };\n}\n\nfunction emptyTypeAnnotation() {\n  return {\n    type: \"EmptyTypeAnnotation\"\n  };\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"NumberLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction numberTypeAnnotation() {\n  return {\n    type: \"NumberTypeAnnotation\"\n  };\n}\n\nfunction objectTypeAnnotation(properties, indexers = [], callProperties = [], internalSlots = [], exact = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact\n  });\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method\n  });\n}\n\nfunction objectTypeCallProperty(value) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null\n  });\n}\n\nfunction objectTypeIndexer(id = null, key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null\n  });\n}\n\nfunction objectTypeProperty(key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null\n  });\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeSpreadProperty\",\n    argument\n  });\n}\n\nfunction opaqueType(id, typeParameters = null, supertype = null, impltype) {\n  return (0, _validateNode.default)({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype\n  });\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return (0, _validateNode.default)({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification\n  });\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction stringTypeAnnotation() {\n  return {\n    type: \"StringTypeAnnotation\"\n  };\n}\n\nfunction symbolTypeAnnotation() {\n  return {\n    type: \"SymbolTypeAnnotation\"\n  };\n}\n\nfunction thisTypeAnnotation() {\n  return {\n    type: \"ThisTypeAnnotation\"\n  };\n}\n\nfunction tupleTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"TupleTypeAnnotation\",\n    types\n  });\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return (0, _validateNode.default)({\n    type: \"TypeofTypeAnnotation\",\n    argument\n  });\n}\n\nfunction typeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction typeParameter(bound = null, _default = null, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null\n  });\n}\n\nfunction typeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction typeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction unionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"UnionTypeAnnotation\",\n    types\n  });\n}\n\nfunction variance(kind) {\n  return (0, _validateNode.default)({\n    type: \"Variance\",\n    kind\n  });\n}\n\nfunction voidTypeAnnotation() {\n  return {\n    type: \"VoidTypeAnnotation\"\n  };\n}\n\nfunction enumDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"EnumDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction enumBooleanBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumNumberBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumStringBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumSymbolBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumBooleanMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null\n  });\n}\n\nfunction enumNumberMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberMember\",\n    id,\n    init\n  });\n}\n\nfunction enumStringMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringMember\",\n    id,\n    init\n  });\n}\n\nfunction enumDefaultedMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumDefaultedMember\",\n    id\n  });\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null\n  });\n}\n\nfunction jsxAttribute(name, value = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXAttribute\",\n    name,\n    value\n  });\n}\n\nfunction jsxClosingElement(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXClosingElement\",\n    name\n  });\n}\n\nfunction jsxElement(openingElement, closingElement = null, children, selfClosing = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing\n  });\n}\n\nfunction jsxEmptyExpression() {\n  return {\n    type: \"JSXEmptyExpression\"\n  };\n}\n\nfunction jsxExpressionContainer(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXExpressionContainer\",\n    expression\n  });\n}\n\nfunction jsxSpreadChild(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadChild\",\n    expression\n  });\n}\n\nfunction jsxIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXIdentifier\",\n    name\n  });\n}\n\nfunction jsxMemberExpression(object, property) {\n  return (0, _validateNode.default)({\n    type: \"JSXMemberExpression\",\n    object,\n    property\n  });\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return (0, _validateNode.default)({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name\n  });\n}\n\nfunction jsxOpeningElement(name, attributes, selfClosing = false) {\n  return (0, _validateNode.default)({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing\n  });\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadAttribute\",\n    argument\n  });\n}\n\nfunction jsxText(value) {\n  return (0, _validateNode.default)({\n    type: \"JSXText\",\n    value\n  });\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return (0, _validateNode.default)({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children\n  });\n}\n\nfunction jsxOpeningFragment() {\n  return {\n    type: \"JSXOpeningFragment\"\n  };\n}\n\nfunction jsxClosingFragment() {\n  return {\n    type: \"JSXClosingFragment\"\n  };\n}\n\nfunction noop() {\n  return {\n    type: \"Noop\"\n  };\n}\n\nfunction placeholder(expectedNode, name) {\n  return (0, _validateNode.default)({\n    type: \"Placeholder\",\n    expectedNode,\n    name\n  });\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"V8IntrinsicIdentifier\",\n    name\n  });\n}\n\nfunction argumentPlaceholder() {\n  return {\n    type: \"ArgumentPlaceholder\"\n  };\n}\n\nfunction bindExpression(object, callee) {\n  return (0, _validateNode.default)({\n    type: \"BindExpression\",\n    object,\n    callee\n  });\n}\n\nfunction importAttribute(key, value) {\n  return (0, _validateNode.default)({\n    type: \"ImportAttribute\",\n    key,\n    value\n  });\n}\n\nfunction decorator(expression) {\n  return (0, _validateNode.default)({\n    type: \"Decorator\",\n    expression\n  });\n}\n\nfunction doExpression(body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"DoExpression\",\n    body,\n    async\n  });\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultSpecifier\",\n    exported\n  });\n}\n\nfunction recordExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"RecordExpression\",\n    properties\n  });\n}\n\nfunction tupleExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"TupleExpression\",\n    elements\n  });\n}\n\nfunction decimalLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DecimalLiteral\",\n    value\n  });\n}\n\nfunction moduleExpression(body) {\n  return (0, _validateNode.default)({\n    type: \"ModuleExpression\",\n    body\n  });\n}\n\nfunction topicReference() {\n  return {\n    type: \"TopicReference\"\n  };\n}\n\nfunction pipelineTopicExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"PipelineTopicExpression\",\n    expression\n  });\n}\n\nfunction pipelineBareFunction(callee) {\n  return (0, _validateNode.default)({\n    type: \"PipelineBareFunction\",\n    callee\n  });\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return {\n    type: \"PipelinePrimaryTopicReference\"\n  };\n}\n\nfunction tsParameterProperty(parameter) {\n  return (0, _validateNode.default)({\n    type: \"TSParameterProperty\",\n    parameter\n  });\n}\n\nfunction tsDeclareFunction(id = null, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsDeclareMethod(decorators = null, key, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsQualifiedName(left, right) {\n  return (0, _validateNode.default)({\n    type: \"TSQualifiedName\",\n    left,\n    right\n  });\n}\n\nfunction tsCallSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsPropertySignature(key, typeAnnotation = null, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    initializer,\n    kind: null\n  });\n}\n\nfunction tsMethodSignature(key, typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null\n  });\n}\n\nfunction tsIndexSignature(parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsAnyKeyword() {\n  return {\n    type: \"TSAnyKeyword\"\n  };\n}\n\nfunction tsBooleanKeyword() {\n  return {\n    type: \"TSBooleanKeyword\"\n  };\n}\n\nfunction tsBigIntKeyword() {\n  return {\n    type: \"TSBigIntKeyword\"\n  };\n}\n\nfunction tsIntrinsicKeyword() {\n  return {\n    type: \"TSIntrinsicKeyword\"\n  };\n}\n\nfunction tsNeverKeyword() {\n  return {\n    type: \"TSNeverKeyword\"\n  };\n}\n\nfunction tsNullKeyword() {\n  return {\n    type: \"TSNullKeyword\"\n  };\n}\n\nfunction tsNumberKeyword() {\n  return {\n    type: \"TSNumberKeyword\"\n  };\n}\n\nfunction tsObjectKeyword() {\n  return {\n    type: \"TSObjectKeyword\"\n  };\n}\n\nfunction tsStringKeyword() {\n  return {\n    type: \"TSStringKeyword\"\n  };\n}\n\nfunction tsSymbolKeyword() {\n  return {\n    type: \"TSSymbolKeyword\"\n  };\n}\n\nfunction tsUndefinedKeyword() {\n  return {\n    type: \"TSUndefinedKeyword\"\n  };\n}\n\nfunction tsUnknownKeyword() {\n  return {\n    type: \"TSUnknownKeyword\"\n  };\n}\n\nfunction tsVoidKeyword() {\n  return {\n    type: \"TSVoidKeyword\"\n  };\n}\n\nfunction tsThisType() {\n  return {\n    type: \"TSThisType\"\n  };\n}\n\nfunction tsFunctionType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructorType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeReference(typeName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters\n  });\n}\n\nfunction tsTypePredicate(parameterName, typeAnnotation = null, asserts = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts\n  });\n}\n\nfunction tsTypeQuery(exprName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters\n  });\n}\n\nfunction tsTypeLiteral(members) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeLiteral\",\n    members\n  });\n}\n\nfunction tsArrayType(elementType) {\n  return (0, _validateNode.default)({\n    type: \"TSArrayType\",\n    elementType\n  });\n}\n\nfunction tsTupleType(elementTypes) {\n  return (0, _validateNode.default)({\n    type: \"TSTupleType\",\n    elementTypes\n  });\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSOptionalType\",\n    typeAnnotation\n  });\n}\n\nfunction tsRestType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSRestType\",\n    typeAnnotation\n  });\n}\n\nfunction tsNamedTupleMember(label, elementType, optional = false) {\n  return (0, _validateNode.default)({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional\n  });\n}\n\nfunction tsUnionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSUnionType\",\n    types\n  });\n}\n\nfunction tsIntersectionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSIntersectionType\",\n    types\n  });\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return (0, _validateNode.default)({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType\n  });\n}\n\nfunction tsInferType(typeParameter) {\n  return (0, _validateNode.default)({\n    type: \"TSInferType\",\n    typeParameter\n  });\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSParenthesizedType\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null\n  });\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction tsMappedType(typeParameter, typeAnnotation = null, nameType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType\n  });\n}\n\nfunction tsLiteralType(literal) {\n  return (0, _validateNode.default)({\n    type: \"TSLiteralType\",\n    literal\n  });\n}\n\nfunction tsExpressionWithTypeArguments(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsInterfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction tsInterfaceBody(body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceBody\",\n    body\n  });\n}\n\nfunction tsTypeAliasDeclaration(id, typeParameters = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation\n  });\n}\n\nfunction tsInstantiationExpression(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression\n  });\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumDeclaration\",\n    id,\n    members\n  });\n}\n\nfunction tsEnumMember(id, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumMember\",\n    id,\n    initializer\n  });\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction tsModuleBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleBlock\",\n    body\n  });\n}\n\nfunction tsImportType(argument, qualifier = null, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters\n  });\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return (0, _validateNode.default)({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null\n  });\n}\n\nfunction tsExternalModuleReference(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExternalModuleReference\",\n    expression\n  });\n}\n\nfunction tsNonNullExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSNonNullExpression\",\n    expression\n  });\n}\n\nfunction tsExportAssignment(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExportAssignment\",\n    expression\n  });\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return (0, _validateNode.default)({\n    type: \"TSNamespaceExportDeclaration\",\n    id\n  });\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction tsTypeParameter(constraint = null, _default = null, name) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name\n  });\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return numericLiteral(value);\n}\n\nfunction RegexLiteral(pattern, flags = \"\") {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return regExpLiteral(pattern, flags);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return restElement(argument);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return spreadElement(argument);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}