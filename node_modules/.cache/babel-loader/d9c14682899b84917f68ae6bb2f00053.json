{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/orange/Desktop/project-catalog-antd/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.array.index-of.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  var _iterator = _createForOfIteratorHelper(nodes),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (!(0, _generated.isEmptyStatement)(node)) {\n        ensureLastUndefined = false;\n      }\n\n      if ((0, _generated.isExpression)(node)) {\n        exprs.push(node);\n      } else if ((0, _generated.isExpressionStatement)(node)) {\n        exprs.push(node.expression);\n      } else if ((0, _generated.isVariableDeclaration)(node)) {\n        if (node.kind !== \"var\") return;\n\n        var _iterator2 = _createForOfIteratorHelper(node.declarations),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var declar = _step2.value;\n            var bindings = (0, _getBindingIdentifiers[\"default\"])(declar);\n\n            for (var _i = 0, _Object$keys = Object.keys(bindings); _i < _Object$keys.length; _i++) {\n              var key = _Object$keys[_i];\n              declars.push({\n                kind: node.kind,\n                id: (0, _cloneNode[\"default\"])(bindings[key])\n              });\n            }\n\n            if (declar.init) {\n              exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        ensureLastUndefined = true;\n      } else if ((0, _generated.isIfStatement)(node)) {\n        var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n        var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n        if (!consequent || !alternate) return;\n        exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n      } else if ((0, _generated.isBlockStatement)(node)) {\n        var body = gatherSequenceExpressions(node.body, scope, declars);\n        if (!body) return;\n        exprs.push(body);\n      } else if ((0, _generated.isEmptyStatement)(node)) {\n        if (nodes.indexOf(node) === 0) {\n          ensureLastUndefined = true;\n        }\n      } else {\n        return;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","gatherSequenceExpressions","_getBindingIdentifiers","require","_generated","_generated2","_cloneNode","nodes","scope","declars","exprs","ensureLastUndefined","node","isEmptyStatement","isExpression","push","isExpressionStatement","expression","isVariableDeclaration","kind","declarations","declar","bindings","keys","key","id","init","assignmentExpression","isIfStatement","consequent","buildUndefinedNode","alternate","conditionalExpression","test","isBlockStatement","body","indexOf","length","sequenceExpression"],"sources":["/home/orange/Desktop/project-catalog-antd/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    if (!(0, _generated.isEmptyStatement)(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if ((0, _generated.isExpression)(node)) {\n      exprs.push(node);\n    } else if ((0, _generated.isExpressionStatement)(node)) {\n      exprs.push(node.expression);\n    } else if ((0, _generated.isVariableDeclaration)(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (const declar of node.declarations) {\n        const bindings = (0, _getBindingIdentifiers.default)(declar);\n\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: (0, _cloneNode.default)(bindings[key])\n          });\n        }\n\n        if (declar.init) {\n          exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if ((0, _generated.isIfStatement)(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n    } else if ((0, _generated.isBlockStatement)(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if ((0, _generated.isEmptyStatement)(node)) {\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}